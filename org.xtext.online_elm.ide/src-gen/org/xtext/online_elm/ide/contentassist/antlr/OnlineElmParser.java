/*
 * generated by Xtext 2.24.0
 */
package org.xtext.online_elm.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.online_elm.ide.contentassist.antlr.internal.InternalOnlineElmParser;
import org.xtext.online_elm.services.OnlineElmGrammarAccess;

public class OnlineElmParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(OnlineElmGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, OnlineElmGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getMainShapeAccess().getAlternatives_4(), "rule__MainShape__Alternatives_4");
			builder.put(grammarAccess.getMainShapeAccess().getAlternatives_5_2(), "rule__MainShape__Alternatives_5_2");
			builder.put(grammarAccess.getMainShapeAccess().getAlternatives_8(), "rule__MainShape__Alternatives_8");
			builder.put(grammarAccess.getShapeDefAccess().getAlternatives(), "rule__ShapeDef__Alternatives");
			builder.put(grammarAccess.getRef_varAccess().getAlternatives(), "rule__Ref_var__Alternatives");
			builder.put(grammarAccess.getShapeListAccess().getAlternatives_3(), "rule__ShapeList__Alternatives_3");
			builder.put(grammarAccess.getShapeListAccess().getAlternatives_4_2(), "rule__ShapeList__Alternatives_4_2");
			builder.put(grammarAccess.getShapeListAccess().getAlternatives_7(), "rule__ShapeList__Alternatives_7");
			builder.put(grammarAccess.getBasicShapeAccess().getAlternatives_3(), "rule__BasicShape__Alternatives_3");
			builder.put(grammarAccess.getConditional_ShapeAccess().getAlternatives_4(), "rule__Conditional_Shape__Alternatives_4");
			builder.put(grammarAccess.getConditional_ShapeAccess().getAlternatives_8(), "rule__Conditional_Shape__Alternatives_8");
			builder.put(grammarAccess.getConditional_ColorAccess().getAlternatives_5(), "rule__Conditional_Color__Alternatives_5");
			builder.put(grammarAccess.getConditional_ColorAccess().getAlternatives_9(), "rule__Conditional_Color__Alternatives_9");
			builder.put(grammarAccess.getConditional_NumAccess().getAlternatives_5(), "rule__Conditional_Num__Alternatives_5");
			builder.put(grammarAccess.getConditional_NumAccess().getAlternatives_9(), "rule__Conditional_Num__Alternatives_9");
			builder.put(grammarAccess.getConditional_StrAccess().getAlternatives_5(), "rule__Conditional_Str__Alternatives_5");
			builder.put(grammarAccess.getConditional_StrAccess().getAlternatives_8(), "rule__Conditional_Str__Alternatives_8");
			builder.put(grammarAccess.getNot_exprAccess().getAlternatives(), "rule__Not_expr__Alternatives");
			builder.put(grammarAccess.getCompare_exprAccess().getOperatorAlternatives_1_1_0(), "rule__Compare_expr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getNum_valueAccess().getAlternatives(), "rule__Num_value__Alternatives");
			builder.put(grammarAccess.getTerminal_math_expAccess().getAlternatives(), "rule__Terminal_math_exp__Alternatives");
			builder.put(grammarAccess.getStencilAccess().getAlternatives(), "rule__Stencil__Alternatives");
			builder.put(grammarAccess.getTextAccess().getAlternatives_1(), "rule__Text__Alternatives_1");
			builder.put(grammarAccess.getDrawAccess().getAlternatives_0(), "rule__Draw__Alternatives_0");
			builder.put(grammarAccess.getFilledAccess().getAlternatives_1(), "rule__Filled__Alternatives_1");
			builder.put(grammarAccess.getOutlinedAccess().getAlternatives_5(), "rule__Outlined__Alternatives_5");
			builder.put(grammarAccess.getTranformAccess().getAlternatives(), "rule__Tranform__Alternatives");
			builder.put(grammarAccess.getMATH_OPAccess().getAlternatives(), "rule__MATH_OP__Alternatives");
			builder.put(grammarAccess.getLineTypeAccess().getAlternatives(), "rule__LineType__Alternatives");
			builder.put(grammarAccess.getColorAccess().getAlternatives(), "rule__Color__Alternatives");
			builder.put(grammarAccess.getOnlineElmAccess().getGroup(), "rule__OnlineElm__Group__0");
			builder.put(grammarAccess.getMainShapeAccess().getGroup(), "rule__MainShape__Group__0");
			builder.put(grammarAccess.getMainShapeAccess().getGroup_5(), "rule__MainShape__Group_5__0");
			builder.put(grammarAccess.getMainShapeAccess().getGroup_8_1(), "rule__MainShape__Group_8_1__0");
			builder.put(grammarAccess.getLocal_varAccess().getGroup(), "rule__Local_var__Group__0");
			builder.put(grammarAccess.getRef_varAccess().getGroup_0(), "rule__Ref_var__Group_0__0");
			builder.put(grammarAccess.getRef_varAccess().getGroup_0_1(), "rule__Ref_var__Group_0_1__0");
			builder.put(grammarAccess.getShapeListAccess().getGroup(), "rule__ShapeList__Group__0");
			builder.put(grammarAccess.getShapeListAccess().getGroup_4(), "rule__ShapeList__Group_4__0");
			builder.put(grammarAccess.getShapeListAccess().getGroup_7_1(), "rule__ShapeList__Group_7_1__0");
			builder.put(grammarAccess.getBasicShapeAccess().getGroup(), "rule__BasicShape__Group__0");
			builder.put(grammarAccess.getShapeAccess().getGroup(), "rule__Shape__Group__0");
			builder.put(grammarAccess.getConditional_ShapeAccess().getGroup(), "rule__Conditional_Shape__Group__0");
			builder.put(grammarAccess.getConditional_ColorAccess().getGroup(), "rule__Conditional_Color__Group__0");
			builder.put(grammarAccess.getConditional_NumAccess().getGroup(), "rule__Conditional_Num__Group__0");
			builder.put(grammarAccess.getConditional_StrAccess().getGroup(), "rule__Conditional_Str__Group__0");
			builder.put(grammarAccess.getOr_exprAccess().getGroup(), "rule__Or_expr__Group__0");
			builder.put(grammarAccess.getOr_exprAccess().getGroup_1(), "rule__Or_expr__Group_1__0");
			builder.put(grammarAccess.getAnd_exprAccess().getGroup(), "rule__And_expr__Group__0");
			builder.put(grammarAccess.getAnd_exprAccess().getGroup_1(), "rule__And_expr__Group_1__0");
			builder.put(grammarAccess.getNot_exprAccess().getGroup_0(), "rule__Not_expr__Group_0__0");
			builder.put(grammarAccess.getCompare_exprAccess().getGroup(), "rule__Compare_expr__Group__0");
			builder.put(grammarAccess.getCompare_exprAccess().getGroup_1(), "rule__Compare_expr__Group_1__0");
			builder.put(grammarAccess.getMath_expAccess().getGroup(), "rule__Math_exp__Group__0");
			builder.put(grammarAccess.getMath_expAccess().getGroup_1(), "rule__Math_exp__Group_1__0");
			builder.put(grammarAccess.getTerminal_math_expAccess().getGroup_0(), "rule__Terminal_math_exp__Group_0__0");
			builder.put(grammarAccess.getTerminal_math_expAccess().getGroup_1(), "rule__Terminal_math_exp__Group_1__0");
			builder.put(grammarAccess.getCircleAccess().getGroup(), "rule__Circle__Group__0");
			builder.put(grammarAccess.getRectAccess().getGroup(), "rule__Rect__Group__0");
			builder.put(grammarAccess.getSquareAccess().getGroup(), "rule__Square__Group__0");
			builder.put(grammarAccess.getRoundedRectAccess().getGroup(), "rule__RoundedRect__Group__0");
			builder.put(grammarAccess.getOvalAccess().getGroup(), "rule__Oval__Group__0");
			builder.put(grammarAccess.getNgonAccess().getGroup(), "rule__Ngon__Group__0");
			builder.put(grammarAccess.getWedgeAccess().getGroup(), "rule__Wedge__Group__0");
			builder.put(grammarAccess.getPolygonAccess().getGroup(), "rule__Polygon__Group__0");
			builder.put(grammarAccess.getPolygonAccess().getGroup_3(), "rule__Polygon__Group_3__0");
			builder.put(grammarAccess.getPointAccess().getGroup(), "rule__Point__Group__0");
			builder.put(grammarAccess.getTextAccess().getGroup(), "rule__Text__Group__0");
			builder.put(grammarAccess.getDrawAccess().getGroup(), "rule__Draw__Group__0");
			builder.put(grammarAccess.getDrawAccess().getGroup_1(), "rule__Draw__Group_1__0");
			builder.put(grammarAccess.getFilledAccess().getGroup(), "rule__Filled__Group__0");
			builder.put(grammarAccess.getFilledAccess().getGroup_2(), "rule__Filled__Group_2__0");
			builder.put(grammarAccess.getOutlinedAccess().getGroup(), "rule__Outlined__Group__0");
			builder.put(grammarAccess.getMoveAccess().getGroup(), "rule__Move__Group__0");
			builder.put(grammarAccess.getRotateAccess().getGroup(), "rule__Rotate__Group__0");
			builder.put(grammarAccess.getScaleAccess().getGroup(), "rule__Scale__Group__0");
			builder.put(grammarAccess.getScaleXAccess().getGroup(), "rule__ScaleX__Group__0");
			builder.put(grammarAccess.getScaleYAccess().getGroup(), "rule__ScaleY__Group__0");
			builder.put(grammarAccess.getOnlineElmAccess().getEntryAssignment_0(), "rule__OnlineElm__EntryAssignment_0");
			builder.put(grammarAccess.getOnlineElmAccess().getShapesAssignment_1(), "rule__OnlineElm__ShapesAssignment_1");
			builder.put(grammarAccess.getOnlineElmAccess().getVarAssignment_2(), "rule__OnlineElm__VarAssignment_2");
			builder.put(grammarAccess.getMainShapeAccess().getNameAssignment_0(), "rule__MainShape__NameAssignment_0");
			builder.put(grammarAccess.getMainShapeAccess().getShapeAssignment_4_0(), "rule__MainShape__ShapeAssignment_4_0");
			builder.put(grammarAccess.getMainShapeAccess().getConditionalAssignment_4_1(), "rule__MainShape__ConditionalAssignment_4_1");
			builder.put(grammarAccess.getMainShapeAccess().getShapeRefAssignment_4_2(), "rule__MainShape__ShapeRefAssignment_4_2");
			builder.put(grammarAccess.getMainShapeAccess().getMoreShapesAssignment_5_2_0(), "rule__MainShape__MoreShapesAssignment_5_2_0");
			builder.put(grammarAccess.getMainShapeAccess().getMoreConditionalAssignment_5_2_1(), "rule__MainShape__MoreConditionalAssignment_5_2_1");
			builder.put(grammarAccess.getMainShapeAccess().getMoreShapeRefAssignment_5_2_2(), "rule__MainShape__MoreShapeRefAssignment_5_2_2");
			builder.put(grammarAccess.getMainShapeAccess().getExternalAssignment_8_1_1(), "rule__MainShape__ExternalAssignment_8_1_1");
			builder.put(grammarAccess.getLocal_varAccess().getNameAssignment_0(), "rule__Local_var__NameAssignment_0");
			builder.put(grammarAccess.getLocal_varAccess().getVarAssignment_2(), "rule__Local_var__VarAssignment_2");
			builder.put(grammarAccess.getShapeListAccess().getNameAssignment_0(), "rule__ShapeList__NameAssignment_0");
			builder.put(grammarAccess.getShapeListAccess().getShapeAssignment_3_0(), "rule__ShapeList__ShapeAssignment_3_0");
			builder.put(grammarAccess.getShapeListAccess().getConditionalAssignment_3_1(), "rule__ShapeList__ConditionalAssignment_3_1");
			builder.put(grammarAccess.getShapeListAccess().getShapeRefAssignment_3_2(), "rule__ShapeList__ShapeRefAssignment_3_2");
			builder.put(grammarAccess.getShapeListAccess().getMoreShapesAssignment_4_2_0(), "rule__ShapeList__MoreShapesAssignment_4_2_0");
			builder.put(grammarAccess.getShapeListAccess().getMoreConditionalAssignment_4_2_1(), "rule__ShapeList__MoreConditionalAssignment_4_2_1");
			builder.put(grammarAccess.getShapeListAccess().getMoreShapeRefAssignment_4_2_2(), "rule__ShapeList__MoreShapeRefAssignment_4_2_2");
			builder.put(grammarAccess.getShapeListAccess().getExternalAssignment_7_1_1(), "rule__ShapeList__ExternalAssignment_7_1_1");
			builder.put(grammarAccess.getBasicShapeAccess().getNameAssignment_0(), "rule__BasicShape__NameAssignment_0");
			builder.put(grammarAccess.getBasicShapeAccess().getShapeAssignment_3_0(), "rule__BasicShape__ShapeAssignment_3_0");
			builder.put(grammarAccess.getBasicShapeAccess().getConditionalAssignment_3_1(), "rule__BasicShape__ConditionalAssignment_3_1");
			builder.put(grammarAccess.getShapeAccess().getStencilAssignment_0(), "rule__Shape__StencilAssignment_0");
			builder.put(grammarAccess.getShapeAccess().getDrawAssignment_2(), "rule__Shape__DrawAssignment_2");
			builder.put(grammarAccess.getConditional_ShapeAccess().getShape_1Assignment_4_0(), "rule__Conditional_Shape__Shape_1Assignment_4_0");
			builder.put(grammarAccess.getConditional_ShapeAccess().getNested_1Assignment_4_1(), "rule__Conditional_Shape__Nested_1Assignment_4_1");
			builder.put(grammarAccess.getConditional_ShapeAccess().getShape_2Assignment_8_0(), "rule__Conditional_Shape__Shape_2Assignment_8_0");
			builder.put(grammarAccess.getConditional_ShapeAccess().getNested_2Assignment_8_1(), "rule__Conditional_Shape__Nested_2Assignment_8_1");
			builder.put(grammarAccess.getConditional_ColorAccess().getColor_1Assignment_5_0(), "rule__Conditional_Color__Color_1Assignment_5_0");
			builder.put(grammarAccess.getConditional_ColorAccess().getNested_1Assignment_5_1(), "rule__Conditional_Color__Nested_1Assignment_5_1");
			builder.put(grammarAccess.getConditional_ColorAccess().getColor_2Assignment_9_0(), "rule__Conditional_Color__Color_2Assignment_9_0");
			builder.put(grammarAccess.getConditional_ColorAccess().getNested_2Assignment_9_1(), "rule__Conditional_Color__Nested_2Assignment_9_1");
			builder.put(grammarAccess.getConditional_NumAccess().getNum_1Assignment_5_0(), "rule__Conditional_Num__Num_1Assignment_5_0");
			builder.put(grammarAccess.getConditional_NumAccess().getNested_1Assignment_5_1(), "rule__Conditional_Num__Nested_1Assignment_5_1");
			builder.put(grammarAccess.getConditional_NumAccess().getNum_2Assignment_9_0(), "rule__Conditional_Num__Num_2Assignment_9_0");
			builder.put(grammarAccess.getConditional_NumAccess().getNested_2Assignment_9_1(), "rule__Conditional_Num__Nested_2Assignment_9_1");
			builder.put(grammarAccess.getConditional_StrAccess().getStr_1Assignment_5_0(), "rule__Conditional_Str__Str_1Assignment_5_0");
			builder.put(grammarAccess.getConditional_StrAccess().getNested_1Assignment_5_1(), "rule__Conditional_Str__Nested_1Assignment_5_1");
			builder.put(grammarAccess.getConditional_StrAccess().getStr_2Assignment_8_0(), "rule__Conditional_Str__Str_2Assignment_8_0");
			builder.put(grammarAccess.getConditional_StrAccess().getNested_2Assignment_8_1(), "rule__Conditional_Str__Nested_2Assignment_8_1");
			builder.put(grammarAccess.getOr_exprAccess().getRightAssignment_1_2(), "rule__Or_expr__RightAssignment_1_2");
			builder.put(grammarAccess.getAnd_exprAccess().getRightAssignment_1_2(), "rule__And_expr__RightAssignment_1_2");
			builder.put(grammarAccess.getNot_exprAccess().getOperandAssignment_0_2(), "rule__Not_expr__OperandAssignment_0_2");
			builder.put(grammarAccess.getCompare_exprAccess().getLeftAssignment_0(), "rule__Compare_expr__LeftAssignment_0");
			builder.put(grammarAccess.getCompare_exprAccess().getOperatorAssignment_1_1(), "rule__Compare_expr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getCompare_exprAccess().getRightAssignment_1_2(), "rule__Compare_expr__RightAssignment_1_2");
			builder.put(grammarAccess.getNum_valueAccess().getLocalAssignment_2(), "rule__Num_value__LocalAssignment_2");
			builder.put(grammarAccess.getNum_valueAccess().getRefAssignment_3(), "rule__Num_value__RefAssignment_3");
			builder.put(grammarAccess.getMath_expAccess().getOpAssignment_1_1(), "rule__Math_exp__OpAssignment_1_1");
			builder.put(grammarAccess.getMath_expAccess().getRightAssignment_1_2(), "rule__Math_exp__RightAssignment_1_2");
			builder.put(grammarAccess.getTerminal_math_expAccess().getValueAssignment_1_1(), "rule__Terminal_math_exp__ValueAssignment_1_1");
			builder.put(grammarAccess.getCircleAccess().getNameAssignment_0(), "rule__Circle__NameAssignment_0");
			builder.put(grammarAccess.getCircleAccess().getRadiusAssignment_1(), "rule__Circle__RadiusAssignment_1");
			builder.put(grammarAccess.getRectAccess().getNameAssignment_0(), "rule__Rect__NameAssignment_0");
			builder.put(grammarAccess.getRectAccess().getWidthAssignment_1(), "rule__Rect__WidthAssignment_1");
			builder.put(grammarAccess.getRectAccess().getHeightAssignment_2(), "rule__Rect__HeightAssignment_2");
			builder.put(grammarAccess.getSquareAccess().getNameAssignment_0(), "rule__Square__NameAssignment_0");
			builder.put(grammarAccess.getSquareAccess().getSideAssignment_1(), "rule__Square__SideAssignment_1");
			builder.put(grammarAccess.getRoundedRectAccess().getNameAssignment_0(), "rule__RoundedRect__NameAssignment_0");
			builder.put(grammarAccess.getRoundedRectAccess().getWidthAssignment_1(), "rule__RoundedRect__WidthAssignment_1");
			builder.put(grammarAccess.getRoundedRectAccess().getHeightAssignment_2(), "rule__RoundedRect__HeightAssignment_2");
			builder.put(grammarAccess.getRoundedRectAccess().getCorner_radiusAssignment_3(), "rule__RoundedRect__Corner_radiusAssignment_3");
			builder.put(grammarAccess.getOvalAccess().getNameAssignment_0(), "rule__Oval__NameAssignment_0");
			builder.put(grammarAccess.getOvalAccess().getWidthAssignment_1(), "rule__Oval__WidthAssignment_1");
			builder.put(grammarAccess.getOvalAccess().getHeightAssignment_2(), "rule__Oval__HeightAssignment_2");
			builder.put(grammarAccess.getNgonAccess().getNameAssignment_0(), "rule__Ngon__NameAssignment_0");
			builder.put(grammarAccess.getNgonAccess().getSides_numAssignment_1(), "rule__Ngon__Sides_numAssignment_1");
			builder.put(grammarAccess.getNgonAccess().getRadiusAssignment_2(), "rule__Ngon__RadiusAssignment_2");
			builder.put(grammarAccess.getWedgeAccess().getNameAssignment_0(), "rule__Wedge__NameAssignment_0");
			builder.put(grammarAccess.getWedgeAccess().getRadiusAssignment_1(), "rule__Wedge__RadiusAssignment_1");
			builder.put(grammarAccess.getWedgeAccess().getFractionAssignment_2(), "rule__Wedge__FractionAssignment_2");
			builder.put(grammarAccess.getPolygonAccess().getNameAssignment_0(), "rule__Polygon__NameAssignment_0");
			builder.put(grammarAccess.getPolygonAccess().getPoint1Assignment_2(), "rule__Polygon__Point1Assignment_2");
			builder.put(grammarAccess.getPolygonAccess().getPointsAssignment_3_1(), "rule__Polygon__PointsAssignment_3_1");
			builder.put(grammarAccess.getPointAccess().getXAssignment_1(), "rule__Point__XAssignment_1");
			builder.put(grammarAccess.getPointAccess().getYAssignment_3(), "rule__Point__YAssignment_3");
			builder.put(grammarAccess.getTextAccess().getNameAssignment_0(), "rule__Text__NameAssignment_0");
			builder.put(grammarAccess.getTextAccess().getContentAssignment_1_0(), "rule__Text__ContentAssignment_1_0");
			builder.put(grammarAccess.getTextAccess().getConditionalContentAssignment_1_1(), "rule__Text__ConditionalContentAssignment_1_1");
			builder.put(grammarAccess.getDrawAccess().getFilledAssignment_0_0(), "rule__Draw__FilledAssignment_0_0");
			builder.put(grammarAccess.getDrawAccess().getOutlinedAssignment_0_1(), "rule__Draw__OutlinedAssignment_0_1");
			builder.put(grammarAccess.getDrawAccess().getTransformAssignment_1_1(), "rule__Draw__TransformAssignment_1_1");
			builder.put(grammarAccess.getFilledAccess().getNameAssignment_0(), "rule__Filled__NameAssignment_0");
			builder.put(grammarAccess.getFilledAccess().getFilledColor1Assignment_1_0(), "rule__Filled__FilledColor1Assignment_1_0");
			builder.put(grammarAccess.getFilledAccess().getFilledColor2Assignment_1_1(), "rule__Filled__FilledColor2Assignment_1_1");
			builder.put(grammarAccess.getFilledAccess().getLineType1Assignment_2_3(), "rule__Filled__LineType1Assignment_2_3");
			builder.put(grammarAccess.getFilledAccess().getWidth1Assignment_2_4(), "rule__Filled__Width1Assignment_2_4");
			builder.put(grammarAccess.getFilledAccess().getOutline_color1Assignment_2_6(), "rule__Filled__Outline_color1Assignment_2_6");
			builder.put(grammarAccess.getOutlinedAccess().getNameAssignment_0(), "rule__Outlined__NameAssignment_0");
			builder.put(grammarAccess.getOutlinedAccess().getLineTypeAssignment_2(), "rule__Outlined__LineTypeAssignment_2");
			builder.put(grammarAccess.getOutlinedAccess().getWidthAssignment_3(), "rule__Outlined__WidthAssignment_3");
			builder.put(grammarAccess.getOutlinedAccess().getOutlinedColor1Assignment_5_0(), "rule__Outlined__OutlinedColor1Assignment_5_0");
			builder.put(grammarAccess.getOutlinedAccess().getOutlinedColor2Assignment_5_1(), "rule__Outlined__OutlinedColor2Assignment_5_1");
			builder.put(grammarAccess.getMoveAccess().getNameAssignment_0(), "rule__Move__NameAssignment_0");
			builder.put(grammarAccess.getMoveAccess().getPointAssignment_1(), "rule__Move__PointAssignment_1");
			builder.put(grammarAccess.getRotateAccess().getNameAssignment_0(), "rule__Rotate__NameAssignment_0");
			builder.put(grammarAccess.getRotateAccess().getDegreeAssignment_3(), "rule__Rotate__DegreeAssignment_3");
			builder.put(grammarAccess.getScaleAccess().getNameAssignment_0(), "rule__Scale__NameAssignment_0");
			builder.put(grammarAccess.getScaleAccess().getFactorAssignment_1(), "rule__Scale__FactorAssignment_1");
			builder.put(grammarAccess.getScaleXAccess().getNameAssignment_0(), "rule__ScaleX__NameAssignment_0");
			builder.put(grammarAccess.getScaleXAccess().getFactorAssignment_1(), "rule__ScaleX__FactorAssignment_1");
			builder.put(grammarAccess.getScaleYAccess().getNameAssignment_0(), "rule__ScaleY__NameAssignment_0");
			builder.put(grammarAccess.getScaleYAccess().getFactorAssignment_1(), "rule__ScaleY__FactorAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private OnlineElmGrammarAccess grammarAccess;

	@Override
	protected InternalOnlineElmParser createParser() {
		InternalOnlineElmParser result = new InternalOnlineElmParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS" };
	}

	public OnlineElmGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(OnlineElmGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
