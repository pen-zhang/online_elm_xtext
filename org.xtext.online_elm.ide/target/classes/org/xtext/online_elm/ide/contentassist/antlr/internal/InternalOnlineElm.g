/*
 * generated by Xtext 2.24.0
 */
grammar InternalOnlineElm;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.online_elm.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.online_elm.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.online_elm.services.OnlineElmGrammarAccess;

}
@parser::members {
	private OnlineElmGrammarAccess grammarAccess;

	public void setGrammarAccess(OnlineElmGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleOnlineElm
entryRuleOnlineElm
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getOnlineElmRule()); }
	 ruleOnlineElm
{ after(grammarAccess.getOnlineElmRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule OnlineElm
ruleOnlineElm 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnlineElmAccess().getUnorderedGroup()); }
		(rule__OnlineElm__UnorderedGroup)
		{ after(grammarAccess.getOnlineElmAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleMainShape
entryRuleMainShape
:
{ before(grammarAccess.getMainShapeRule()); }
	 ruleMainShape
{ after(grammarAccess.getMainShapeRule()); } 
	 EOF 
;

// Rule MainShape
ruleMainShape 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainShapeAccess().getGroup()); }
		(rule__MainShape__Group__0)
		{ after(grammarAccess.getMainShapeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapeDef
entryRuleShapeDef
:
{ before(grammarAccess.getShapeDefRule()); }
	 ruleShapeDef
{ after(grammarAccess.getShapeDefRule()); } 
	 EOF 
;

// Rule ShapeDef
ruleShapeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeDefAccess().getAlternatives()); }
		(rule__ShapeDef__Alternatives)
		{ after(grammarAccess.getShapeDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapeGroup
entryRuleShapeGroup
:
{ before(grammarAccess.getShapeGroupRule()); }
	 ruleShapeGroup
{ after(grammarAccess.getShapeGroupRule()); } 
	 EOF 
;

// Rule ShapeGroup
ruleShapeGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeGroupAccess().getGroup()); }
		(rule__ShapeGroup__Group__0)
		{ after(grammarAccess.getShapeGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicShape
entryRuleBasicShape
:
{ before(grammarAccess.getBasicShapeRule()); }
	 ruleBasicShape
{ after(grammarAccess.getBasicShapeRule()); } 
	 EOF 
;

// Rule BasicShape
ruleBasicShape 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicShapeAccess().getGroup()); }
		(rule__BasicShape__Group__0)
		{ after(grammarAccess.getBasicShapeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShape
entryRuleShape
:
{ before(grammarAccess.getShapeRule()); }
	 ruleShape
{ after(grammarAccess.getShapeRule()); } 
	 EOF 
;

// Rule Shape
ruleShape 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeAccess().getAlternatives()); }
		(rule__Shape__Alternatives)
		{ after(grammarAccess.getShapeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditional
entryRuleConditional
:
{ before(grammarAccess.getConditionalRule()); }
	 ruleConditional
{ after(grammarAccess.getConditionalRule()); } 
	 EOF 
;

// Rule Conditional
ruleConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAccess().getGroup()); }
		(rule__Conditional__Group__0)
		{ after(grammarAccess.getConditionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBool_exp
entryRuleBool_exp
:
{ before(grammarAccess.getBool_expRule()); }
	 ruleBool_exp
{ after(grammarAccess.getBool_expRule()); } 
	 EOF 
;

// Rule Bool_exp
ruleBool_exp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBool_expAccess().getGroup()); }
		(rule__Bool_exp__Group__0)
		{ after(grammarAccess.getBool_expAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminal_Bool_exp
entryRuleTerminal_Bool_exp
:
{ before(grammarAccess.getTerminal_Bool_expRule()); }
	 ruleTerminal_Bool_exp
{ after(grammarAccess.getTerminal_Bool_expRule()); } 
	 EOF 
;

// Rule Terminal_Bool_exp
ruleTerminal_Bool_exp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminal_Bool_expAccess().getGroup()); }
		(rule__Terminal_Bool_exp__Group__0)
		{ after(grammarAccess.getTerminal_Bool_expAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNum_value
entryRuleNum_value
:
{ before(grammarAccess.getNum_valueRule()); }
	 ruleNum_value
{ after(grammarAccess.getNum_valueRule()); } 
	 EOF 
;

// Rule Num_value
ruleNum_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNum_valueAccess().getAlternatives()); }
		(rule__Num_value__Alternatives)
		{ after(grammarAccess.getNum_valueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMath_exp
entryRuleMath_exp
:
{ before(grammarAccess.getMath_expRule()); }
	 ruleMath_exp
{ after(grammarAccess.getMath_expRule()); } 
	 EOF 
;

// Rule Math_exp
ruleMath_exp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMath_expAccess().getGroup()); }
		(rule__Math_exp__Group__0)
		{ after(grammarAccess.getMath_expAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStencil
entryRuleStencil
:
{ before(grammarAccess.getStencilRule()); }
	 ruleStencil
{ after(grammarAccess.getStencilRule()); } 
	 EOF 
;

// Rule Stencil
ruleStencil 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStencilAccess().getAlternatives()); }
		(rule__Stencil__Alternatives)
		{ after(grammarAccess.getStencilAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCircle
entryRuleCircle
:
{ before(grammarAccess.getCircleRule()); }
	 ruleCircle
{ after(grammarAccess.getCircleRule()); } 
	 EOF 
;

// Rule Circle
ruleCircle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCircleAccess().getGroup()); }
		(rule__Circle__Group__0)
		{ after(grammarAccess.getCircleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRect
entryRuleRect
:
{ before(grammarAccess.getRectRule()); }
	 ruleRect
{ after(grammarAccess.getRectRule()); } 
	 EOF 
;

// Rule Rect
ruleRect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRectAccess().getGroup()); }
		(rule__Rect__Group__0)
		{ after(grammarAccess.getRectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDraw
entryRuleDraw
:
{ before(grammarAccess.getDrawRule()); }
	 ruleDraw
{ after(grammarAccess.getDrawRule()); } 
	 EOF 
;

// Rule Draw
ruleDraw 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDrawAccess().getGroup()); }
		(rule__Draw__Group__0)
		{ after(grammarAccess.getDrawAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFill
entryRuleFill
:
{ before(grammarAccess.getFillRule()); }
	 ruleFill
{ after(grammarAccess.getFillRule()); } 
	 EOF 
;

// Rule Fill
ruleFill 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFillAccess().getGroup()); }
		(rule__Fill__Group__0)
		{ after(grammarAccess.getFillAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getGroup()); }
		(rule__Move__Group__0)
		{ after(grammarAccess.getMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BOOL_OP
ruleBOOL_OP
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOL_OPAccess().getAlternatives()); }
		(rule__BOOL_OP__Alternatives)
		{ after(grammarAccess.getBOOL_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MATH_OP
ruleMATH_OP
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMATH_OPAccess().getAlternatives()); }
		(rule__MATH_OP__Alternatives)
		{ after(grammarAccess.getMATH_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule COMPARISON
ruleCOMPARISON
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISONAccess().getAlternatives()); }
		(rule__COMPARISON__Alternatives)
		{ after(grammarAccess.getCOMPARISONAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Color
ruleColor
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getAlternatives()); }
		(rule__Color__Alternatives)
		{ after(grammarAccess.getColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getS1Assignment_3_0()); }
		(rule__MainShape__S1Assignment_3_0)
		{ after(grammarAccess.getMainShapeAccess().getS1Assignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getMainShapeAccess().getS11Assignment_3_1()); }
		(rule__MainShape__S11Assignment_3_1)
		{ after(grammarAccess.getMainShapeAccess().getS11Assignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getGroup_4_0()); }
		(rule__MainShape__Group_4_0__0)
		{ after(grammarAccess.getMainShapeAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getMainShapeAccess().getS22Assignment_4_1()); }
		(rule__MainShape__S22Assignment_4_1)
		{ after(grammarAccess.getMainShapeAccess().getS22Assignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeDefAccess().getShapeGroupParserRuleCall_0()); }
		ruleShapeGroup
		{ after(grammarAccess.getShapeDefAccess().getShapeGroupParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeDefAccess().getBasicShapeParserRuleCall_1()); }
		ruleBasicShape
		{ after(grammarAccess.getShapeDefAccess().getBasicShapeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeGroupAccess().getS1Assignment_3_0()); }
		(rule__ShapeGroup__S1Assignment_3_0)
		{ after(grammarAccess.getShapeGroupAccess().getS1Assignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeGroupAccess().getS11Assignment_3_1()); }
		(rule__ShapeGroup__S11Assignment_3_1)
		{ after(grammarAccess.getShapeGroupAccess().getS11Assignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeGroupAccess().getGroup_4_0()); }
		(rule__ShapeGroup__Group_4_0__0)
		{ after(grammarAccess.getShapeGroupAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeGroupAccess().getS22Assignment_4_1()); }
		(rule__ShapeGroup__S22Assignment_4_1)
		{ after(grammarAccess.getShapeGroupAccess().getS22Assignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getGroup_0()); }
		(rule__Shape__Group_0__0)
		{ after(grammarAccess.getShapeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeAccess().getConditionalParserRuleCall_1()); }
		ruleConditional
		{ after(grammarAccess.getShapeAccess().getConditionalParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num_value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNum_valueAccess().getNumAssignment_0()); }
		(rule__Num_value__NumAssignment_0)
		{ after(grammarAccess.getNum_valueAccess().getNumAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNum_valueAccess().getMath_expParserRuleCall_1()); }
		ruleMath_exp
		{ after(grammarAccess.getNum_valueAccess().getMath_expParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stencil__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStencilAccess().getCircleParserRuleCall_0()); }
		ruleCircle
		{ after(grammarAccess.getStencilAccess().getCircleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getRectParserRuleCall_1()); }
		ruleRect
		{ after(grammarAccess.getStencilAccess().getRectParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getTextParserRuleCall_2()); }
		ruleText
		{ after(grammarAccess.getStencilAccess().getTextParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOL_OPAccess().getAndEnumLiteralDeclaration_0()); }
		('&&')
		{ after(grammarAccess.getBOOL_OPAccess().getAndEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOL_OPAccess().getOrEnumLiteralDeclaration_1()); }
		('||')
		{ after(grammarAccess.getBOOL_OPAccess().getOrEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MATH_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMATH_OPAccess().getPlusEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getMATH_OPAccess().getPlusEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMATH_OPAccess().getMinusEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getMATH_OPAccess().getMinusEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMATH_OPAccess().getTimesEnumLiteralDeclaration_2()); }
		('*')
		{ after(grammarAccess.getMATH_OPAccess().getTimesEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getMATH_OPAccess().getDivideEnumLiteralDeclaration_3()); }
		('/')
		{ after(grammarAccess.getMATH_OPAccess().getDivideEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISONAccess().getBiggerEnumLiteralDeclaration_0()); }
		('>')
		{ after(grammarAccess.getCOMPARISONAccess().getBiggerEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISONAccess().getNoLessThanEnumLiteralDeclaration_1()); }
		('>=')
		{ after(grammarAccess.getCOMPARISONAccess().getNoLessThanEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISONAccess().getSmallerEnumLiteralDeclaration_2()); }
		('<')
		{ after(grammarAccess.getCOMPARISONAccess().getSmallerEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISONAccess().getNoBiggerThanEnumLiteralDeclaration_3()); }
		('<=')
		{ after(grammarAccess.getCOMPARISONAccess().getNoBiggerThanEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISONAccess().getEqualEnumLiteralDeclaration_4()); }
		('==')
		{ after(grammarAccess.getCOMPARISONAccess().getEqualEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getBLACKEnumLiteralDeclaration_0()); }
		('black')
		{ after(grammarAccess.getColorAccess().getBLACKEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getREDEnumLiteralDeclaration_1()); }
		('red')
		{ after(grammarAccess.getColorAccess().getREDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getBLUEEnumLiteralDeclaration_2()); }
		('blue')
		{ after(grammarAccess.getColorAccess().getBLUEEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__0__Impl
	rule__MainShape__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getNameAssignment_0()); }
	(rule__MainShape__NameAssignment_0)
	{ after(grammarAccess.getMainShapeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__1__Impl
	rule__MainShape__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getMainShapeAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__2__Impl
	rule__MainShape__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getMainShapeAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__3__Impl
	rule__MainShape__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getAlternatives_3()); }
	(rule__MainShape__Alternatives_3)
	{ after(grammarAccess.getMainShapeAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__4__Impl
	rule__MainShape__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getAlternatives_4()); }
	(rule__MainShape__Alternatives_4)*
	{ after(grammarAccess.getMainShapeAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__5__Impl
	rule__MainShape__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getMainShapeAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getGroup_6()); }
	(rule__MainShape__Group_6__0)*
	{ after(grammarAccess.getMainShapeAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainShape__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group_4_0__0__Impl
	rule__MainShape__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getCommaKeyword_4_0_0()); }
	','
	{ after(grammarAccess.getMainShapeAccess().getCommaKeyword_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getS2Assignment_4_0_1()); }
	(rule__MainShape__S2Assignment_4_0_1)
	{ after(grammarAccess.getMainShapeAccess().getS2Assignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainShape__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group_6__0__Impl
	rule__MainShape__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getPlusSignPlusSignKeyword_6_0()); }
	'++'
	{ after(grammarAccess.getMainShapeAccess().getPlusSignPlusSignKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getSgAssignment_6_1()); }
	(rule__MainShape__SgAssignment_6_1)
	{ after(grammarAccess.getMainShapeAccess().getSgAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group__0__Impl
	rule__ShapeGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getNameAssignment_0()); }
	(rule__ShapeGroup__NameAssignment_0)
	{ after(grammarAccess.getShapeGroupAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group__1__Impl
	rule__ShapeGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getShapeGroupAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group__2__Impl
	rule__ShapeGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getShapeGroupAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group__3__Impl
	rule__ShapeGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getAlternatives_3()); }
	(rule__ShapeGroup__Alternatives_3)
	{ after(grammarAccess.getShapeGroupAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group__4__Impl
	rule__ShapeGroup__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getAlternatives_4()); }
	(rule__ShapeGroup__Alternatives_4)*
	{ after(grammarAccess.getShapeGroupAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group__5__Impl
	rule__ShapeGroup__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getShapeGroupAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getGroup_6()); }
	(rule__ShapeGroup__Group_6__0)*
	{ after(grammarAccess.getShapeGroupAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeGroup__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group_4_0__0__Impl
	rule__ShapeGroup__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getCommaKeyword_4_0_0()); }
	','
	{ after(grammarAccess.getShapeGroupAccess().getCommaKeyword_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getS2Assignment_4_0_1()); }
	(rule__ShapeGroup__S2Assignment_4_0_1)
	{ after(grammarAccess.getShapeGroupAccess().getS2Assignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeGroup__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group_6__0__Impl
	rule__ShapeGroup__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getPlusSignPlusSignKeyword_6_0()); }
	'++'
	{ after(grammarAccess.getShapeGroupAccess().getPlusSignPlusSignKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeGroup__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeGroupAccess().getSgAssignment_6_1()); }
	(rule__ShapeGroup__SgAssignment_6_1)
	{ after(grammarAccess.getShapeGroupAccess().getSgAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicShape__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicShape__Group__0__Impl
	rule__BasicShape__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicShapeAccess().getNameAssignment_0()); }
	(rule__BasicShape__NameAssignment_0)
	{ after(grammarAccess.getBasicShapeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicShape__Group__1__Impl
	rule__BasicShape__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicShapeAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getBasicShapeAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicShape__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicShapeAccess().getShapeAssignment_2()); }
	(rule__BasicShape__ShapeAssignment_2)
	{ after(grammarAccess.getBasicShapeAccess().getShapeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shape__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group_0__0__Impl
	rule__Shape__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getStencilAssignment_0_0()); }
	(rule__Shape__StencilAssignment_0_0)
	{ after(grammarAccess.getShapeAccess().getStencilAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group_0__1__Impl
	rule__Shape__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getVerticalLineGreaterThanSignKeyword_0_1()); }
	'|>'
	{ after(grammarAccess.getShapeAccess().getVerticalLineGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getDrawAssignment_0_2()); }
	(rule__Shape__DrawAssignment_0_2)
	{ after(grammarAccess.getShapeAccess().getDrawAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__0__Impl
	rule__Conditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionalAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__1__Impl
	rule__Conditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getBool_expParserRuleCall_1()); }
	ruleBool_exp
	{ after(grammarAccess.getConditionalAccess().getBool_expParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__2__Impl
	rule__Conditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getConditionalAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__3__Impl
	rule__Conditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getExp1Assignment_3()); }
	(rule__Conditional__Exp1Assignment_3)
	{ after(grammarAccess.getConditionalAccess().getExp1Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__4__Impl
	rule__Conditional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getConditionalAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getExp2Assignment_5()); }
	(rule__Conditional__Exp2Assignment_5)
	{ after(grammarAccess.getConditionalAccess().getExp2Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bool_exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool_exp__Group__0__Impl
	rule__Bool_exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBool_expAccess().getNotKeyword_0()); }
	('not')?
	{ after(grammarAccess.getBool_expAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool_exp__Group__1__Impl
	rule__Bool_exp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBool_expAccess().getLeftAssignment_1()); }
	(rule__Bool_exp__LeftAssignment_1)
	{ after(grammarAccess.getBool_expAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool_exp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBool_expAccess().getGroup_2()); }
	(rule__Bool_exp__Group_2__0)*
	{ after(grammarAccess.getBool_expAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bool_exp__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool_exp__Group_2__0__Impl
	rule__Bool_exp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBool_expAccess().getOperatorAssignment_2_0()); }
	(rule__Bool_exp__OperatorAssignment_2_0)
	{ after(grammarAccess.getBool_expAccess().getOperatorAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool_exp__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBool_expAccess().getRightsAssignment_2_1()); }
	(rule__Bool_exp__RightsAssignment_2_1)
	{ after(grammarAccess.getBool_expAccess().getRightsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminal_Bool_exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Terminal_Bool_exp__Group__0__Impl
	rule__Terminal_Bool_exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_Bool_exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminal_Bool_expAccess().getN1Assignment_0()); }
	(rule__Terminal_Bool_exp__N1Assignment_0)
	{ after(grammarAccess.getTerminal_Bool_expAccess().getN1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_Bool_exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Terminal_Bool_exp__Group__1__Impl
	rule__Terminal_Bool_exp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_Bool_exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminal_Bool_expAccess().getCompAssignment_1()); }
	(rule__Terminal_Bool_exp__CompAssignment_1)
	{ after(grammarAccess.getTerminal_Bool_expAccess().getCompAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_Bool_exp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Terminal_Bool_exp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_Bool_exp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminal_Bool_expAccess().getN2Assignment_2()); }
	(rule__Terminal_Bool_exp__N2Assignment_2)
	{ after(grammarAccess.getTerminal_Bool_expAccess().getN2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Math_exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group__0__Impl
	rule__Math_exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getMath_expAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group__1__Impl
	rule__Math_exp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getN1Assignment_1()); }
	(rule__Math_exp__N1Assignment_1)
	{ after(grammarAccess.getMath_expAccess().getN1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group__2__Impl
	rule__Math_exp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getOp1Assignment_2()); }
	(rule__Math_exp__Op1Assignment_2)
	{ after(grammarAccess.getMath_expAccess().getOp1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group__3__Impl
	rule__Math_exp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getN2Assignment_3()); }
	(rule__Math_exp__N2Assignment_3)
	{ after(grammarAccess.getMath_expAccess().getN2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMath_expAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Circle__Group__0__Impl
	rule__Circle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCircleAccess().getNameAssignment_0()); }
	(rule__Circle__NameAssignment_0)
	{ after(grammarAccess.getCircleAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Circle__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCircleAccess().getDiameterAssignment_1()); }
	(rule__Circle__DiameterAssignment_1)
	{ after(grammarAccess.getCircleAccess().getDiameterAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rect__Group__0__Impl
	rule__Rect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectAccess().getNameAssignment_0()); }
	(rule__Rect__NameAssignment_0)
	{ after(grammarAccess.getRectAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rect__Group__1__Impl
	rule__Rect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectAccess().getEdgeXAssignment_1()); }
	(rule__Rect__EdgeXAssignment_1)
	{ after(grammarAccess.getRectAccess().getEdgeXAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectAccess().getEdgeYAssignment_2()); }
	(rule__Rect__EdgeYAssignment_2)
	{ after(grammarAccess.getRectAccess().getEdgeYAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getNameAssignment_0()); }
	(rule__Text__NameAssignment_0)
	{ after(grammarAccess.getTextAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getContentAssignment_1()); }
	(rule__Text__ContentAssignment_1)
	{ after(grammarAccess.getTextAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Draw__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Draw__Group__0__Impl
	rule__Draw__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDrawAccess().getFilledColorAssignment_0()); }
	(rule__Draw__FilledColorAssignment_0)
	{ after(grammarAccess.getDrawAccess().getFilledColorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Draw__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDrawAccess().getGroup_1()); }
	(rule__Draw__Group_1__0)?
	{ after(grammarAccess.getDrawAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Draw__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Draw__Group_1__0__Impl
	rule__Draw__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDrawAccess().getVerticalLineGreaterThanSignKeyword_1_0()); }
	'|>'
	{ after(grammarAccess.getDrawAccess().getVerticalLineGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Draw__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDrawAccess().getPositionAssignment_1_1()); }
	(rule__Draw__PositionAssignment_1_1)
	{ after(grammarAccess.getDrawAccess().getPositionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fill__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fill__Group__0__Impl
	rule__Fill__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillAccess().getNameAssignment_0()); }
	(rule__Fill__NameAssignment_0)
	{ after(grammarAccess.getFillAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fill__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillAccess().getColorAssignment_1()); }
	(rule__Fill__ColorAssignment_1)
	{ after(grammarAccess.getFillAccess().getColorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__0__Impl
	rule__Move__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getNameAssignment_0()); }
	(rule__Move__NameAssignment_0)
	{ after(grammarAccess.getMoveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__1__Impl
	rule__Move__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMoveAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__2__Impl
	rule__Move__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getXAssignment_2()); }
	(rule__Move__XAssignment_2)
	{ after(grammarAccess.getMoveAccess().getXAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__3__Impl
	rule__Move__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getMoveAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__4__Impl
	rule__Move__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getYAssignment_4()); }
	(rule__Move__YAssignment_4)
	{ after(grammarAccess.getMoveAccess().getYAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMoveAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OnlineElm__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getOnlineElmAccess().getUnorderedGroup());
	}
:
	rule__OnlineElm__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getOnlineElmAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getOnlineElmAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__OnlineElm__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getOnlineElmAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getOnlineElmAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getOnlineElmAccess().getEntryAssignment_0()); }
					(rule__OnlineElm__EntryAssignment_0)
					{ after(grammarAccess.getOnlineElmAccess().getEntryAssignment_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getOnlineElmAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getOnlineElmAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getOnlineElmAccess().getShapesAssignment_1()); }
						(rule__OnlineElm__ShapesAssignment_1)
						{ after(grammarAccess.getOnlineElmAccess().getShapesAssignment_1()); }
					)
					(
						{ before(grammarAccess.getOnlineElmAccess().getShapesAssignment_1()); }
						((rule__OnlineElm__ShapesAssignment_1)=>rule__OnlineElm__ShapesAssignment_1)*
						{ after(grammarAccess.getOnlineElmAccess().getShapesAssignment_1()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOnlineElmAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__OnlineElm__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnlineElm__UnorderedGroup__Impl
	rule__OnlineElm__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnlineElm__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__OnlineElm__EntryAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnlineElmAccess().getEntryMainShapeParserRuleCall_0_0()); }
		ruleMainShape
		{ after(grammarAccess.getOnlineElmAccess().getEntryMainShapeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__ShapesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnlineElmAccess().getShapesShapeDefParserRuleCall_1_0()); }
		ruleShapeDef
		{ after(grammarAccess.getOnlineElmAccess().getShapesShapeDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getNameMyShapesKeyword_0_0()); }
		(
			{ before(grammarAccess.getMainShapeAccess().getNameMyShapesKeyword_0_0()); }
			'myShapes'
			{ after(grammarAccess.getMainShapeAccess().getNameMyShapesKeyword_0_0()); }
		)
		{ after(grammarAccess.getMainShapeAccess().getNameMyShapesKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__S1Assignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getS1ShapeParserRuleCall_3_0_0()); }
		ruleShape
		{ after(grammarAccess.getMainShapeAccess().getS1ShapeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__S11Assignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getS11BasicShapeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getMainShapeAccess().getS11BasicShapeIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMainShapeAccess().getS11BasicShapeIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getMainShapeAccess().getS11BasicShapeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__S2Assignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getS2ShapeParserRuleCall_4_0_1_0()); }
		ruleShape
		{ after(grammarAccess.getMainShapeAccess().getS2ShapeParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__S22Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getS22BasicShapeCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getMainShapeAccess().getS22BasicShapeIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMainShapeAccess().getS22BasicShapeIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getMainShapeAccess().getS22BasicShapeCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__SgAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getSgShapeGroupCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getMainShapeAccess().getSgShapeGroupIDTerminalRuleCall_6_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMainShapeAccess().getSgShapeGroupIDTerminalRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getMainShapeAccess().getSgShapeGroupCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeGroupAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getShapeGroupAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__S1Assignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeGroupAccess().getS1ShapeParserRuleCall_3_0_0()); }
		ruleShape
		{ after(grammarAccess.getShapeGroupAccess().getS1ShapeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__S11Assignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeGroupAccess().getS11BasicShapeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getShapeGroupAccess().getS11BasicShapeIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getShapeGroupAccess().getS11BasicShapeIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getShapeGroupAccess().getS11BasicShapeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__S2Assignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeGroupAccess().getS2ShapeParserRuleCall_4_0_1_0()); }
		ruleShape
		{ after(grammarAccess.getShapeGroupAccess().getS2ShapeParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__S22Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeGroupAccess().getS22BasicShapeCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getShapeGroupAccess().getS22BasicShapeIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getShapeGroupAccess().getS22BasicShapeIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getShapeGroupAccess().getS22BasicShapeCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeGroup__SgAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeGroupAccess().getSgShapeGroupCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getShapeGroupAccess().getSgShapeGroupIDTerminalRuleCall_6_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getShapeGroupAccess().getSgShapeGroupIDTerminalRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getShapeGroupAccess().getSgShapeGroupCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicShapeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBasicShapeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__ShapeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicShapeAccess().getShapeShapeParserRuleCall_2_0()); }
		ruleShape
		{ after(grammarAccess.getBasicShapeAccess().getShapeShapeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__StencilAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getStencilStencilParserRuleCall_0_0_0()); }
		ruleStencil
		{ after(grammarAccess.getShapeAccess().getStencilStencilParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__DrawAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getDrawDrawParserRuleCall_0_2_0()); }
		ruleDraw
		{ after(grammarAccess.getShapeAccess().getDrawDrawParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Exp1Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAccess().getExp1ShapeParserRuleCall_3_0()); }
		ruleShape
		{ after(grammarAccess.getConditionalAccess().getExp1ShapeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Exp2Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAccess().getExp2ShapeParserRuleCall_5_0()); }
		ruleShape
		{ after(grammarAccess.getConditionalAccess().getExp2ShapeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBool_expAccess().getLeftTerminal_Bool_expParserRuleCall_1_0()); }
		ruleTerminal_Bool_exp
		{ after(grammarAccess.getBool_expAccess().getLeftTerminal_Bool_expParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__OperatorAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBool_expAccess().getOperatorBOOL_OPEnumRuleCall_2_0_0()); }
		ruleBOOL_OP
		{ after(grammarAccess.getBool_expAccess().getOperatorBOOL_OPEnumRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_exp__RightsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBool_expAccess().getRightsTerminal_Bool_expParserRuleCall_2_1_0()); }
		ruleTerminal_Bool_exp
		{ after(grammarAccess.getBool_expAccess().getRightsTerminal_Bool_expParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_Bool_exp__N1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminal_Bool_expAccess().getN1Num_valueParserRuleCall_0_0()); }
		ruleNum_value
		{ after(grammarAccess.getTerminal_Bool_expAccess().getN1Num_valueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_Bool_exp__CompAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminal_Bool_expAccess().getCompCOMPARISONEnumRuleCall_1_0()); }
		ruleCOMPARISON
		{ after(grammarAccess.getTerminal_Bool_expAccess().getCompCOMPARISONEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_Bool_exp__N2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminal_Bool_expAccess().getN2Num_valueParserRuleCall_2_0()); }
		ruleNum_value
		{ after(grammarAccess.getTerminal_Bool_expAccess().getN2Num_valueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num_value__NumAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNum_valueAccess().getNumFLOATTerminalRuleCall_0_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getNum_valueAccess().getNumFLOATTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__N1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMath_expAccess().getN1FLOATTerminalRuleCall_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getMath_expAccess().getN1FLOATTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Op1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMath_expAccess().getOp1MATH_OPEnumRuleCall_2_0()); }
		ruleMATH_OP
		{ after(grammarAccess.getMath_expAccess().getOp1MATH_OPEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__N2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMath_expAccess().getN2FLOATTerminalRuleCall_3_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getMath_expAccess().getN2FLOATTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCircleAccess().getNameCircleKeyword_0_0()); }
		(
			{ before(grammarAccess.getCircleAccess().getNameCircleKeyword_0_0()); }
			'circle'
			{ after(grammarAccess.getCircleAccess().getNameCircleKeyword_0_0()); }
		)
		{ after(grammarAccess.getCircleAccess().getNameCircleKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__DiameterAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCircleAccess().getDiameterFLOATTerminalRuleCall_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getCircleAccess().getDiameterFLOATTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectAccess().getNameRectKeyword_0_0()); }
		(
			{ before(grammarAccess.getRectAccess().getNameRectKeyword_0_0()); }
			'rect'
			{ after(grammarAccess.getRectAccess().getNameRectKeyword_0_0()); }
		)
		{ after(grammarAccess.getRectAccess().getNameRectKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__EdgeXAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectAccess().getEdgeXFLOATTerminalRuleCall_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getRectAccess().getEdgeXFLOATTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__EdgeYAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectAccess().getEdgeYFLOATTerminalRuleCall_2_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getRectAccess().getEdgeYFLOATTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
		(
			{ before(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
			'text'
			{ after(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
		)
		{ after(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getContentSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getContentSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__FilledColorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDrawAccess().getFilledColorFillParserRuleCall_0_0()); }
		ruleFill
		{ after(grammarAccess.getDrawAccess().getFilledColorFillParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__PositionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDrawAccess().getPositionMoveParserRuleCall_1_1_0()); }
		ruleMove
		{ after(grammarAccess.getDrawAccess().getPositionMoveParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillAccess().getNameFilledKeyword_0_0()); }
		(
			{ before(grammarAccess.getFillAccess().getNameFilledKeyword_0_0()); }
			'filled'
			{ after(grammarAccess.getFillAccess().getNameFilledKeyword_0_0()); }
		)
		{ after(grammarAccess.getFillAccess().getNameFilledKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__ColorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillAccess().getColorColorEnumRuleCall_1_0()); }
		ruleColor
		{ after(grammarAccess.getFillAccess().getColorColorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getNameMoveKeyword_0_0()); }
		(
			{ before(grammarAccess.getMoveAccess().getNameMoveKeyword_0_0()); }
			'move'
			{ after(grammarAccess.getMoveAccess().getNameMoveKeyword_0_0()); }
		)
		{ after(grammarAccess.getMoveAccess().getNameMoveKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__XAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getXNum_valueParserRuleCall_2_0()); }
		ruleNum_value
		{ after(grammarAccess.getMoveAccess().getXNum_valueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__YAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getYNum_valueParserRuleCall_4_0()); }
		ruleNum_value
		{ after(grammarAccess.getMoveAccess().getYNum_valueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_FLOAT : '-'? RULE_INT ('.' RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
