/*
 * generated by Xtext 2.24.0
 */
grammar InternalOnlineElm;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.online_elm.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.online_elm.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.online_elm.services.OnlineElmGrammarAccess;

}
@parser::members {
	private OnlineElmGrammarAccess grammarAccess;

	public void setGrammarAccess(OnlineElmGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleOnlineElm
entryRuleOnlineElm
:
{ before(grammarAccess.getOnlineElmRule()); }
	 ruleOnlineElm
{ after(grammarAccess.getOnlineElmRule()); } 
	 EOF 
;

// Rule OnlineElm
ruleOnlineElm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnlineElmAccess().getGroup()); }
		(rule__OnlineElm__Group__0)
		{ after(grammarAccess.getOnlineElmAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainShape
entryRuleMainShape
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL");
}
:
{ before(grammarAccess.getMainShapeRule()); }
	 ruleMainShape
{ after(grammarAccess.getMainShapeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MainShape
ruleMainShape 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainShapeAccess().getGroup()); }
		(rule__MainShape__Group__0)
		{ after(grammarAccess.getMainShapeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleShapeDef
entryRuleShapeDef
:
{ before(grammarAccess.getShapeDefRule()); }
	 ruleShapeDef
{ after(grammarAccess.getShapeDefRule()); } 
	 EOF 
;

// Rule ShapeDef
ruleShapeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeDefAccess().getAlternatives()); }
		(rule__ShapeDef__Alternatives)
		{ after(grammarAccess.getShapeDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocal_var
entryRuleLocal_var
:
{ before(grammarAccess.getLocal_varRule()); }
	 ruleLocal_var
{ after(grammarAccess.getLocal_varRule()); } 
	 EOF 
;

// Rule Local_var
ruleLocal_var 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocal_varAccess().getGroup()); }
		(rule__Local_var__Group__0)
		{ after(grammarAccess.getLocal_varAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRef_var
entryRuleRef_var
:
{ before(grammarAccess.getRef_varRule()); }
	 ruleRef_var
{ after(grammarAccess.getRef_varRule()); } 
	 EOF 
;

// Rule Ref_var
ruleRef_var 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRef_varAccess().getAlternatives()); }
		(rule__Ref_var__Alternatives)
		{ after(grammarAccess.getRef_varAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapeList
entryRuleShapeList
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL");
}
:
{ before(grammarAccess.getShapeListRule()); }
	 ruleShapeList
{ after(grammarAccess.getShapeListRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ShapeList
ruleShapeList 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_NL");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeListAccess().getGroup()); }
		(rule__ShapeList__Group__0)
		{ after(grammarAccess.getShapeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleBasicShape
entryRuleBasicShape
:
{ before(grammarAccess.getBasicShapeRule()); }
	 ruleBasicShape
{ after(grammarAccess.getBasicShapeRule()); } 
	 EOF 
;

// Rule BasicShape
ruleBasicShape 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicShapeAccess().getGroup()); }
		(rule__BasicShape__Group__0)
		{ after(grammarAccess.getBasicShapeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShape
entryRuleShape
:
{ before(grammarAccess.getShapeRule()); }
	 ruleShape
{ after(grammarAccess.getShapeRule()); } 
	 EOF 
;

// Rule Shape
ruleShape 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeAccess().getGroup()); }
		(rule__Shape__Group__0)
		{ after(grammarAccess.getShapeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditional_Shape
entryRuleConditional_Shape
:
{ before(grammarAccess.getConditional_ShapeRule()); }
	 ruleConditional_Shape
{ after(grammarAccess.getConditional_ShapeRule()); } 
	 EOF 
;

// Rule Conditional_Shape
ruleConditional_Shape 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditional_ShapeAccess().getGroup()); }
		(rule__Conditional_Shape__Group__0)
		{ after(grammarAccess.getConditional_ShapeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditional_Color
entryRuleConditional_Color
:
{ before(grammarAccess.getConditional_ColorRule()); }
	 ruleConditional_Color
{ after(grammarAccess.getConditional_ColorRule()); } 
	 EOF 
;

// Rule Conditional_Color
ruleConditional_Color 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditional_ColorAccess().getGroup()); }
		(rule__Conditional_Color__Group__0)
		{ after(grammarAccess.getConditional_ColorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditional_Num
entryRuleConditional_Num
:
{ before(grammarAccess.getConditional_NumRule()); }
	 ruleConditional_Num
{ after(grammarAccess.getConditional_NumRule()); } 
	 EOF 
;

// Rule Conditional_Num
ruleConditional_Num 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditional_NumAccess().getGroup()); }
		(rule__Conditional_Num__Group__0)
		{ after(grammarAccess.getConditional_NumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditional_Str
entryRuleConditional_Str
:
{ before(grammarAccess.getConditional_StrRule()); }
	 ruleConditional_Str
{ after(grammarAccess.getConditional_StrRule()); } 
	 EOF 
;

// Rule Conditional_Str
ruleConditional_Str 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditional_StrAccess().getGroup()); }
		(rule__Conditional_Str__Group__0)
		{ after(grammarAccess.getConditional_StrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBool_expr
entryRuleBool_expr
:
{ before(grammarAccess.getBool_exprRule()); }
	 ruleBool_expr
{ after(grammarAccess.getBool_exprRule()); } 
	 EOF 
;

// Rule Bool_expr
ruleBool_expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBool_exprAccess().getOr_exprParserRuleCall()); }
		ruleOr_expr
		{ after(grammarAccess.getBool_exprAccess().getOr_exprParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr_expr
entryRuleOr_expr
:
{ before(grammarAccess.getOr_exprRule()); }
	 ruleOr_expr
{ after(grammarAccess.getOr_exprRule()); } 
	 EOF 
;

// Rule Or_expr
ruleOr_expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOr_exprAccess().getGroup()); }
		(rule__Or_expr__Group__0)
		{ after(grammarAccess.getOr_exprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd_expr
entryRuleAnd_expr
:
{ before(grammarAccess.getAnd_exprRule()); }
	 ruleAnd_expr
{ after(grammarAccess.getAnd_exprRule()); } 
	 EOF 
;

// Rule And_expr
ruleAnd_expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_exprAccess().getGroup()); }
		(rule__And_expr__Group__0)
		{ after(grammarAccess.getAnd_exprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNot_expr
entryRuleNot_expr
:
{ before(grammarAccess.getNot_exprRule()); }
	 ruleNot_expr
{ after(grammarAccess.getNot_exprRule()); } 
	 EOF 
;

// Rule Not_expr
ruleNot_expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNot_exprAccess().getAlternatives()); }
		(rule__Not_expr__Alternatives)
		{ after(grammarAccess.getNot_exprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompare_expr
entryRuleCompare_expr
:
{ before(grammarAccess.getCompare_exprRule()); }
	 ruleCompare_expr
{ after(grammarAccess.getCompare_exprRule()); } 
	 EOF 
;

// Rule Compare_expr
ruleCompare_expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompare_exprAccess().getGroup()); }
		(rule__Compare_expr__Group__0)
		{ after(grammarAccess.getCompare_exprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNum_value
entryRuleNum_value
:
{ before(grammarAccess.getNum_valueRule()); }
	 ruleNum_value
{ after(grammarAccess.getNum_valueRule()); } 
	 EOF 
;

// Rule Num_value
ruleNum_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNum_valueAccess().getAlternatives()); }
		(rule__Num_value__Alternatives)
		{ after(grammarAccess.getNum_valueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMath_exp
entryRuleMath_exp
:
{ before(grammarAccess.getMath_expRule()); }
	 ruleMath_exp
{ after(grammarAccess.getMath_expRule()); } 
	 EOF 
;

// Rule Math_exp
ruleMath_exp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMath_expAccess().getGroup()); }
		(rule__Math_exp__Group__0)
		{ after(grammarAccess.getMath_expAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminal_math_exp
entryRuleTerminal_math_exp
:
{ before(grammarAccess.getTerminal_math_expRule()); }
	 ruleTerminal_math_exp
{ after(grammarAccess.getTerminal_math_expRule()); } 
	 EOF 
;

// Rule Terminal_math_exp
ruleTerminal_math_exp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminal_math_expAccess().getAlternatives()); }
		(rule__Terminal_math_exp__Alternatives)
		{ after(grammarAccess.getTerminal_math_expAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStencil
entryRuleStencil
:
{ before(grammarAccess.getStencilRule()); }
	 ruleStencil
{ after(grammarAccess.getStencilRule()); } 
	 EOF 
;

// Rule Stencil
ruleStencil 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStencilAccess().getAlternatives()); }
		(rule__Stencil__Alternatives)
		{ after(grammarAccess.getStencilAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCircle
entryRuleCircle
:
{ before(grammarAccess.getCircleRule()); }
	 ruleCircle
{ after(grammarAccess.getCircleRule()); } 
	 EOF 
;

// Rule Circle
ruleCircle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCircleAccess().getGroup()); }
		(rule__Circle__Group__0)
		{ after(grammarAccess.getCircleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRect
entryRuleRect
:
{ before(grammarAccess.getRectRule()); }
	 ruleRect
{ after(grammarAccess.getRectRule()); } 
	 EOF 
;

// Rule Rect
ruleRect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRectAccess().getGroup()); }
		(rule__Rect__Group__0)
		{ after(grammarAccess.getRectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSquare
entryRuleSquare
:
{ before(grammarAccess.getSquareRule()); }
	 ruleSquare
{ after(grammarAccess.getSquareRule()); } 
	 EOF 
;

// Rule Square
ruleSquare 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSquareAccess().getGroup()); }
		(rule__Square__Group__0)
		{ after(grammarAccess.getSquareAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoundedRect
entryRuleRoundedRect
:
{ before(grammarAccess.getRoundedRectRule()); }
	 ruleRoundedRect
{ after(grammarAccess.getRoundedRectRule()); } 
	 EOF 
;

// Rule RoundedRect
ruleRoundedRect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoundedRectAccess().getGroup()); }
		(rule__RoundedRect__Group__0)
		{ after(grammarAccess.getRoundedRectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOval
entryRuleOval
:
{ before(grammarAccess.getOvalRule()); }
	 ruleOval
{ after(grammarAccess.getOvalRule()); } 
	 EOF 
;

// Rule Oval
ruleOval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOvalAccess().getGroup()); }
		(rule__Oval__Group__0)
		{ after(grammarAccess.getOvalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNgon
entryRuleNgon
:
{ before(grammarAccess.getNgonRule()); }
	 ruleNgon
{ after(grammarAccess.getNgonRule()); } 
	 EOF 
;

// Rule Ngon
ruleNgon 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNgonAccess().getGroup()); }
		(rule__Ngon__Group__0)
		{ after(grammarAccess.getNgonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWedge
entryRuleWedge
:
{ before(grammarAccess.getWedgeRule()); }
	 ruleWedge
{ after(grammarAccess.getWedgeRule()); } 
	 EOF 
;

// Rule Wedge
ruleWedge 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWedgeAccess().getGroup()); }
		(rule__Wedge__Group__0)
		{ after(grammarAccess.getWedgeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePolygon
entryRulePolygon
:
{ before(grammarAccess.getPolygonRule()); }
	 rulePolygon
{ after(grammarAccess.getPolygonRule()); } 
	 EOF 
;

// Rule Polygon
rulePolygon 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPolygonAccess().getGroup()); }
		(rule__Polygon__Group__0)
		{ after(grammarAccess.getPolygonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePoint
entryRulePoint
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointAccess().getGroup()); }
		(rule__Point__Group__0)
		{ after(grammarAccess.getPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDraw
entryRuleDraw
:
{ before(grammarAccess.getDrawRule()); }
	 ruleDraw
{ after(grammarAccess.getDrawRule()); } 
	 EOF 
;

// Rule Draw
ruleDraw 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDrawAccess().getGroup()); }
		(rule__Draw__Group__0)
		{ after(grammarAccess.getDrawAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilled
entryRuleFilled
:
{ before(grammarAccess.getFilledRule()); }
	 ruleFilled
{ after(grammarAccess.getFilledRule()); } 
	 EOF 
;

// Rule Filled
ruleFilled 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilledAccess().getGroup()); }
		(rule__Filled__Group__0)
		{ after(grammarAccess.getFilledAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutlined
entryRuleOutlined
:
{ before(grammarAccess.getOutlinedRule()); }
	 ruleOutlined
{ after(grammarAccess.getOutlinedRule()); } 
	 EOF 
;

// Rule Outlined
ruleOutlined 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutlinedAccess().getGroup()); }
		(rule__Outlined__Group__0)
		{ after(grammarAccess.getOutlinedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTranform
entryRuleTranform
:
{ before(grammarAccess.getTranformRule()); }
	 ruleTranform
{ after(grammarAccess.getTranformRule()); } 
	 EOF 
;

// Rule Tranform
ruleTranform 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTranformAccess().getAlternatives()); }
		(rule__Tranform__Alternatives)
		{ after(grammarAccess.getTranformAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getGroup()); }
		(rule__Move__Group__0)
		{ after(grammarAccess.getMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotate
entryRuleRotate
:
{ before(grammarAccess.getRotateRule()); }
	 ruleRotate
{ after(grammarAccess.getRotateRule()); } 
	 EOF 
;

// Rule Rotate
ruleRotate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateAccess().getGroup()); }
		(rule__Rotate__Group__0)
		{ after(grammarAccess.getRotateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScale
entryRuleScale
:
{ before(grammarAccess.getScaleRule()); }
	 ruleScale
{ after(grammarAccess.getScaleRule()); } 
	 EOF 
;

// Rule Scale
ruleScale 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScaleAccess().getGroup()); }
		(rule__Scale__Group__0)
		{ after(grammarAccess.getScaleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScaleX
entryRuleScaleX
:
{ before(grammarAccess.getScaleXRule()); }
	 ruleScaleX
{ after(grammarAccess.getScaleXRule()); } 
	 EOF 
;

// Rule ScaleX
ruleScaleX 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScaleXAccess().getGroup()); }
		(rule__ScaleX__Group__0)
		{ after(grammarAccess.getScaleXAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScaleY
entryRuleScaleY
:
{ before(grammarAccess.getScaleYRule()); }
	 ruleScaleY
{ after(grammarAccess.getScaleYRule()); } 
	 EOF 
;

// Rule ScaleY
ruleScaleY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScaleYAccess().getGroup()); }
		(rule__ScaleY__Group__0)
		{ after(grammarAccess.getScaleYAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MATH_OP
ruleMATH_OP
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMATH_OPAccess().getAlternatives()); }
		(rule__MATH_OP__Alternatives)
		{ after(grammarAccess.getMATH_OPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LineType
ruleLineType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineTypeAccess().getAlternatives()); }
		(rule__LineType__Alternatives)
		{ after(grammarAccess.getLineTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Color
ruleColor
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getAlternatives()); }
		(rule__Color__Alternatives)
		{ after(grammarAccess.getColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getShapeAssignment_4_0()); }
		(rule__MainShape__ShapeAssignment_4_0)
		{ after(grammarAccess.getMainShapeAccess().getShapeAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getMainShapeAccess().getConditionalAssignment_4_1()); }
		(rule__MainShape__ConditionalAssignment_4_1)
		{ after(grammarAccess.getMainShapeAccess().getConditionalAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getMainShapeAccess().getShapeRefAssignment_4_2()); }
		(rule__MainShape__ShapeRefAssignment_4_2)
		{ after(grammarAccess.getMainShapeAccess().getShapeRefAssignment_4_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Alternatives_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getMoreShapesAssignment_5_2_0()); }
		(rule__MainShape__MoreShapesAssignment_5_2_0)
		{ after(grammarAccess.getMainShapeAccess().getMoreShapesAssignment_5_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getMainShapeAccess().getMoreConditionalAssignment_5_2_1()); }
		(rule__MainShape__MoreConditionalAssignment_5_2_1)
		{ after(grammarAccess.getMainShapeAccess().getMoreConditionalAssignment_5_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getMainShapeAccess().getMoreShapeRefAssignment_5_2_2()); }
		(rule__MainShape__MoreShapeRefAssignment_5_2_2)
		{ after(grammarAccess.getMainShapeAccess().getMoreShapeRefAssignment_5_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Alternatives_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getNLTerminalRuleCall_8_0()); }
		RULE_NL
		{ after(grammarAccess.getMainShapeAccess().getNLTerminalRuleCall_8_0()); }
	)
	|
	(
		{ before(grammarAccess.getMainShapeAccess().getGroup_8_1()); }
		(rule__MainShape__Group_8_1__0)
		{ after(grammarAccess.getMainShapeAccess().getGroup_8_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeDefAccess().getShapeListParserRuleCall_0()); }
		ruleShapeList
		{ after(grammarAccess.getShapeDefAccess().getShapeListParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeDefAccess().getBasicShapeParserRuleCall_1()); }
		ruleBasicShape
		{ after(grammarAccess.getShapeDefAccess().getBasicShapeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref_var__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRef_varAccess().getGroup_0()); }
		(rule__Ref_var__Group_0__0)
		{ after(grammarAccess.getRef_varAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRef_varAccess().getTimeKeyword_1()); }
		'time'
		{ after(grammarAccess.getRef_varAccess().getTimeKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getShapeAssignment_3_0()); }
		(rule__ShapeList__ShapeAssignment_3_0)
		{ after(grammarAccess.getShapeListAccess().getShapeAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeListAccess().getConditionalAssignment_3_1()); }
		(rule__ShapeList__ConditionalAssignment_3_1)
		{ after(grammarAccess.getShapeListAccess().getConditionalAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getShapeListAccess().getShapeRefAssignment_3_2()); }
		(rule__ShapeList__ShapeRefAssignment_3_2)
		{ after(grammarAccess.getShapeListAccess().getShapeRefAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Alternatives_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getMoreShapesAssignment_4_2_0()); }
		(rule__ShapeList__MoreShapesAssignment_4_2_0)
		{ after(grammarAccess.getShapeListAccess().getMoreShapesAssignment_4_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeListAccess().getMoreConditionalAssignment_4_2_1()); }
		(rule__ShapeList__MoreConditionalAssignment_4_2_1)
		{ after(grammarAccess.getShapeListAccess().getMoreConditionalAssignment_4_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getShapeListAccess().getMoreShapeRefAssignment_4_2_2()); }
		(rule__ShapeList__MoreShapeRefAssignment_4_2_2)
		{ after(grammarAccess.getShapeListAccess().getMoreShapeRefAssignment_4_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getNLTerminalRuleCall_7_0()); }
		RULE_NL
		{ after(grammarAccess.getShapeListAccess().getNLTerminalRuleCall_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeListAccess().getGroup_7_1()); }
		(rule__ShapeList__Group_7_1__0)
		{ after(grammarAccess.getShapeListAccess().getGroup_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicShapeAccess().getShapeAssignment_3_0()); }
		(rule__BasicShape__ShapeAssignment_3_0)
		{ after(grammarAccess.getBasicShapeAccess().getShapeAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicShapeAccess().getConditionalAssignment_3_1()); }
		(rule__BasicShape__ConditionalAssignment_3_1)
		{ after(grammarAccess.getBasicShapeAccess().getConditionalAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ShapeAccess().getShape_1Assignment_4_0()); }
		(rule__Conditional_Shape__Shape_1Assignment_4_0)
		{ after(grammarAccess.getConditional_ShapeAccess().getShape_1Assignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditional_ShapeAccess().getNested_1Assignment_4_1()); }
		(rule__Conditional_Shape__Nested_1Assignment_4_1)
		{ after(grammarAccess.getConditional_ShapeAccess().getNested_1Assignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Alternatives_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ShapeAccess().getShape_2Assignment_8_0()); }
		(rule__Conditional_Shape__Shape_2Assignment_8_0)
		{ after(grammarAccess.getConditional_ShapeAccess().getShape_2Assignment_8_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditional_ShapeAccess().getNested_2Assignment_8_1()); }
		(rule__Conditional_Shape__Nested_2Assignment_8_1)
		{ after(grammarAccess.getConditional_ShapeAccess().getNested_2Assignment_8_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ColorAccess().getColor_1Assignment_5_0()); }
		(rule__Conditional_Color__Color_1Assignment_5_0)
		{ after(grammarAccess.getConditional_ColorAccess().getColor_1Assignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditional_ColorAccess().getNested_1Assignment_5_1()); }
		(rule__Conditional_Color__Nested_1Assignment_5_1)
		{ after(grammarAccess.getConditional_ColorAccess().getNested_1Assignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Alternatives_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ColorAccess().getColor_2Assignment_9_0()); }
		(rule__Conditional_Color__Color_2Assignment_9_0)
		{ after(grammarAccess.getConditional_ColorAccess().getColor_2Assignment_9_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditional_ColorAccess().getNested_2Assignment_9_1()); }
		(rule__Conditional_Color__Nested_2Assignment_9_1)
		{ after(grammarAccess.getConditional_ColorAccess().getNested_2Assignment_9_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_NumAccess().getNum_1Assignment_5_0()); }
		(rule__Conditional_Num__Num_1Assignment_5_0)
		{ after(grammarAccess.getConditional_NumAccess().getNum_1Assignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditional_NumAccess().getNested_1Assignment_5_1()); }
		(rule__Conditional_Num__Nested_1Assignment_5_1)
		{ after(grammarAccess.getConditional_NumAccess().getNested_1Assignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Alternatives_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_NumAccess().getNum_2Assignment_9_0()); }
		(rule__Conditional_Num__Num_2Assignment_9_0)
		{ after(grammarAccess.getConditional_NumAccess().getNum_2Assignment_9_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditional_NumAccess().getNested_2Assignment_9_1()); }
		(rule__Conditional_Num__Nested_2Assignment_9_1)
		{ after(grammarAccess.getConditional_NumAccess().getNested_2Assignment_9_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_StrAccess().getStr_1Assignment_5_0()); }
		(rule__Conditional_Str__Str_1Assignment_5_0)
		{ after(grammarAccess.getConditional_StrAccess().getStr_1Assignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditional_StrAccess().getNested_1Assignment_5_1()); }
		(rule__Conditional_Str__Nested_1Assignment_5_1)
		{ after(grammarAccess.getConditional_StrAccess().getNested_1Assignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Alternatives_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_StrAccess().getStr_2Assignment_8_0()); }
		(rule__Conditional_Str__Str_2Assignment_8_0)
		{ after(grammarAccess.getConditional_StrAccess().getStr_2Assignment_8_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditional_StrAccess().getNested_2Assignment_8_1()); }
		(rule__Conditional_Str__Nested_2Assignment_8_1)
		{ after(grammarAccess.getConditional_StrAccess().getNested_2Assignment_8_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not_expr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNot_exprAccess().getGroup_0()); }
		(rule__Not_expr__Group_0__0)
		{ after(grammarAccess.getNot_exprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNot_exprAccess().getCompare_exprParserRuleCall_1()); }
		ruleCompare_expr
		{ after(grammarAccess.getNot_exprAccess().getCompare_exprParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompare_exprAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getCompare_exprAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompare_exprAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getCompare_exprAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompare_exprAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_2()); }
		'=='
		{ after(grammarAccess.getCompare_exprAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompare_exprAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_3()); }
		'!='
		{ after(grammarAccess.getCompare_exprAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getCompare_exprAccess().getOperatorGreaterThanSignKeyword_1_1_0_4()); }
		'>'
		{ after(grammarAccess.getCompare_exprAccess().getOperatorGreaterThanSignKeyword_1_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getCompare_exprAccess().getOperatorLessThanSignKeyword_1_1_0_5()); }
		'<'
		{ after(grammarAccess.getCompare_exprAccess().getOperatorLessThanSignKeyword_1_1_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num_value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNum_valueAccess().getMath_expParserRuleCall_0()); }
		ruleMath_exp
		{ after(grammarAccess.getNum_valueAccess().getMath_expParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNum_valueAccess().getConditional_NumParserRuleCall_1()); }
		ruleConditional_Num
		{ after(grammarAccess.getNum_valueAccess().getConditional_NumParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNum_valueAccess().getLocalAssignment_2()); }
		(rule__Num_value__LocalAssignment_2)
		{ after(grammarAccess.getNum_valueAccess().getLocalAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getNum_valueAccess().getRefAssignment_3()); }
		(rule__Num_value__RefAssignment_3)
		{ after(grammarAccess.getNum_valueAccess().getRefAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminal_math_expAccess().getGroup_0()); }
		(rule__Terminal_math_exp__Group_0__0)
		{ after(grammarAccess.getTerminal_math_expAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminal_math_expAccess().getGroup_1()); }
		(rule__Terminal_math_exp__Group_1__0)
		{ after(grammarAccess.getTerminal_math_expAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stencil__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStencilAccess().getCircleParserRuleCall_0()); }
		ruleCircle
		{ after(grammarAccess.getStencilAccess().getCircleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getRectParserRuleCall_1()); }
		ruleRect
		{ after(grammarAccess.getStencilAccess().getRectParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getSquareParserRuleCall_2()); }
		ruleSquare
		{ after(grammarAccess.getStencilAccess().getSquareParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getRoundedRectParserRuleCall_3()); }
		ruleRoundedRect
		{ after(grammarAccess.getStencilAccess().getRoundedRectParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getOvalParserRuleCall_4()); }
		ruleOval
		{ after(grammarAccess.getStencilAccess().getOvalParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getNgonParserRuleCall_5()); }
		ruleNgon
		{ after(grammarAccess.getStencilAccess().getNgonParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getWedgeParserRuleCall_6()); }
		ruleWedge
		{ after(grammarAccess.getStencilAccess().getWedgeParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getPolygonParserRuleCall_7()); }
		rulePolygon
		{ after(grammarAccess.getStencilAccess().getPolygonParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getStencilAccess().getTextParserRuleCall_8()); }
		ruleText
		{ after(grammarAccess.getStencilAccess().getTextParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getContentAssignment_1_0()); }
		(rule__Text__ContentAssignment_1_0)
		{ after(grammarAccess.getTextAccess().getContentAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getConditionalContentAssignment_1_1()); }
		(rule__Text__ConditionalContentAssignment_1_1)
		{ after(grammarAccess.getTextAccess().getConditionalContentAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDrawAccess().getFilledAssignment_0_0()); }
		(rule__Draw__FilledAssignment_0_0)
		{ after(grammarAccess.getDrawAccess().getFilledAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDrawAccess().getOutlinedAssignment_0_1()); }
		(rule__Draw__OutlinedAssignment_0_1)
		{ after(grammarAccess.getDrawAccess().getOutlinedAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilledAccess().getFilledColor1Assignment_1_0()); }
		(rule__Filled__FilledColor1Assignment_1_0)
		{ after(grammarAccess.getFilledAccess().getFilledColor1Assignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFilledAccess().getFilledColor2Assignment_1_1()); }
		(rule__Filled__FilledColor2Assignment_1_1)
		{ after(grammarAccess.getFilledAccess().getFilledColor2Assignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlinedAccess().getOutlinedColor1Assignment_5_0()); }
		(rule__Outlined__OutlinedColor1Assignment_5_0)
		{ after(grammarAccess.getOutlinedAccess().getOutlinedColor1Assignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutlinedAccess().getOutlinedColor2Assignment_5_1()); }
		(rule__Outlined__OutlinedColor2Assignment_5_1)
		{ after(grammarAccess.getOutlinedAccess().getOutlinedColor2Assignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tranform__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTranformAccess().getMoveParserRuleCall_0()); }
		ruleMove
		{ after(grammarAccess.getTranformAccess().getMoveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTranformAccess().getRotateParserRuleCall_1()); }
		ruleRotate
		{ after(grammarAccess.getTranformAccess().getRotateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTranformAccess().getScaleParserRuleCall_2()); }
		ruleScale
		{ after(grammarAccess.getTranformAccess().getScaleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTranformAccess().getScaleXParserRuleCall_3()); }
		ruleScaleX
		{ after(grammarAccess.getTranformAccess().getScaleXParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTranformAccess().getScaleYParserRuleCall_4()); }
		ruleScaleY
		{ after(grammarAccess.getTranformAccess().getScaleYParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MATH_OP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMATH_OPAccess().getPlusEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getMATH_OPAccess().getPlusEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMATH_OPAccess().getMinusEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getMATH_OPAccess().getMinusEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMATH_OPAccess().getTimesEnumLiteralDeclaration_2()); }
		('*')
		{ after(grammarAccess.getMATH_OPAccess().getTimesEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getMATH_OPAccess().getDivideEnumLiteralDeclaration_3()); }
		('/')
		{ after(grammarAccess.getMATH_OPAccess().getDivideEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LineType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLineTypeAccess().getSolidEnumLiteralDeclaration_0()); }
		('solid')
		{ after(grammarAccess.getLineTypeAccess().getSolidEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLineTypeAccess().getDottedEnumLiteralDeclaration_1()); }
		('dotted')
		{ after(grammarAccess.getLineTypeAccess().getDottedEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getLineTypeAccess().getDashedEnumLiteralDeclaration_2()); }
		('dashed')
		{ after(grammarAccess.getLineTypeAccess().getDashedEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getLineTypeAccess().getDotdashEnumLiteralDeclaration_3()); }
		('dotdash')
		{ after(grammarAccess.getLineTypeAccess().getDotdashEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getLineTypeAccess().getLongdashEnumLiteralDeclaration_4()); }
		('longdash')
		{ after(grammarAccess.getLineTypeAccess().getLongdashEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_0()); }
		('black')
		{ after(grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getBlankEnumLiteralDeclaration_1()); }
		('blank')
		{ after(grammarAccess.getColorAccess().getBlankEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getBlueEnumLiteralDeclaration_2()); }
		('blue')
		{ after(grammarAccess.getColorAccess().getBlueEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getBrownEnumLiteralDeclaration_3()); }
		('brown')
		{ after(grammarAccess.getColorAccess().getBrownEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getCharcoalEnumLiteralDeclaration_4()); }
		('charcoal')
		{ after(grammarAccess.getColorAccess().getCharcoalEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkBlueEnumLiteralDeclaration_5()); }
		('darkBlue')
		{ after(grammarAccess.getColorAccess().getDarkBlueEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkBrownEnumLiteralDeclaration_6()); }
		('darkBrown')
		{ after(grammarAccess.getColorAccess().getDarkBrownEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkGrayEnumLiteralDeclaration_7()); }
		('darkGray')
		{ after(grammarAccess.getColorAccess().getDarkGrayEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkGreenEnumLiteralDeclaration_8()); }
		('darkGreen')
		{ after(grammarAccess.getColorAccess().getDarkGreenEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkGreyEnumLiteralDeclaration_9()); }
		('darkGrey')
		{ after(grammarAccess.getColorAccess().getDarkGreyEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkOrangeEnumLiteralDeclaration_10()); }
		('darkOrange')
		{ after(grammarAccess.getColorAccess().getDarkOrangeEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkPurpleEnumLiteralDeclaration_11()); }
		('darkPurple')
		{ after(grammarAccess.getColorAccess().getDarkPurpleEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkRedEnumLiteralDeclaration_12()); }
		('darkRed')
		{ after(grammarAccess.getColorAccess().getDarkRedEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getDarkYellowEnumLiteralDeclaration_13()); }
		('darkYellow')
		{ after(grammarAccess.getColorAccess().getDarkYellowEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGrayEnumLiteralDeclaration_14()); }
		('gray')
		{ after(grammarAccess.getColorAccess().getGrayEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_15()); }
		('green')
		{ after(grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_15()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGreyEnumLiteralDeclaration_16()); }
		('grey')
		{ after(grammarAccess.getColorAccess().getGreyEnumLiteralDeclaration_16()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getHotPinkEnumLiteralDeclaration_17()); }
		('hotPink')
		{ after(grammarAccess.getColorAccess().getHotPinkEnumLiteralDeclaration_17()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightBlueEnumLiteralDeclaration_18()); }
		('lightBlue')
		{ after(grammarAccess.getColorAccess().getLightBlueEnumLiteralDeclaration_18()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightBrownEnumLiteralDeclaration_19()); }
		('lightBrown')
		{ after(grammarAccess.getColorAccess().getLightBrownEnumLiteralDeclaration_19()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightCharcoalEnumLiteralDeclaration_20()); }
		('lightCharcoal')
		{ after(grammarAccess.getColorAccess().getLightCharcoalEnumLiteralDeclaration_20()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightGrayEnumLiteralDeclaration_21()); }
		('lightGray')
		{ after(grammarAccess.getColorAccess().getLightGrayEnumLiteralDeclaration_21()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightGreenEnumLiteralDeclaration_22()); }
		('lightGreen')
		{ after(grammarAccess.getColorAccess().getLightGreenEnumLiteralDeclaration_22()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightGreyEnumLiteralDeclaration_23()); }
		('lightGrey')
		{ after(grammarAccess.getColorAccess().getLightGreyEnumLiteralDeclaration_23()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightOrangeEnumLiteralDeclaration_24()); }
		('lightOrange')
		{ after(grammarAccess.getColorAccess().getLightOrangeEnumLiteralDeclaration_24()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightPurpleEnumLiteralDeclaration_25()); }
		('lightPurple')
		{ after(grammarAccess.getColorAccess().getLightPurpleEnumLiteralDeclaration_25()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightRedEnumLiteralDeclaration_26()); }
		('lightRed')
		{ after(grammarAccess.getColorAccess().getLightRedEnumLiteralDeclaration_26()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getLightYellowEnumLiteralDeclaration_27()); }
		('lightYellow')
		{ after(grammarAccess.getColorAccess().getLightYellowEnumLiteralDeclaration_27()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getOrangeEnumLiteralDeclaration_28()); }
		('orange')
		{ after(grammarAccess.getColorAccess().getOrangeEnumLiteralDeclaration_28()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getPinkEnumLiteralDeclaration_29()); }
		('pink')
		{ after(grammarAccess.getColorAccess().getPinkEnumLiteralDeclaration_29()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getPurpleEnumLiteralDeclaration_30()); }
		('purple')
		{ after(grammarAccess.getColorAccess().getPurpleEnumLiteralDeclaration_30()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_31()); }
		('red')
		{ after(grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_31()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_32()); }
		('white')
		{ after(grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_32()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getYellowEnumLiteralDeclaration_33()); }
		('yellow')
		{ after(grammarAccess.getColorAccess().getYellowEnumLiteralDeclaration_33()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnlineElm__Group__0__Impl
	rule__OnlineElm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnlineElmAccess().getEntryAssignment_0()); }
	(rule__OnlineElm__EntryAssignment_0)
	{ after(grammarAccess.getOnlineElmAccess().getEntryAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnlineElm__Group__1__Impl
	rule__OnlineElm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnlineElmAccess().getShapesAssignment_1()); }
	(rule__OnlineElm__ShapesAssignment_1)*
	{ after(grammarAccess.getOnlineElmAccess().getShapesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnlineElm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnlineElmAccess().getVarAssignment_2()); }
	(rule__OnlineElm__VarAssignment_2)*
	{ after(grammarAccess.getOnlineElmAccess().getVarAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainShape__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__0__Impl
	rule__MainShape__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getNameAssignment_0()); }
	(rule__MainShape__NameAssignment_0)
	{ after(grammarAccess.getMainShapeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__1__Impl
	rule__MainShape__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getTimeKeyword_1()); }
	'time'
	{ after(grammarAccess.getMainShapeAccess().getTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__2__Impl
	rule__MainShape__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getMainShapeAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__3__Impl
	rule__MainShape__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getMainShapeAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__4__Impl
	rule__MainShape__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getAlternatives_4()); }
	(rule__MainShape__Alternatives_4)
	{ after(grammarAccess.getMainShapeAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__5__Impl
	rule__MainShape__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getGroup_5()); }
	(rule__MainShape__Group_5__0)*
	{ after(grammarAccess.getMainShapeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__6__Impl
	rule__MainShape__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getNLTerminalRuleCall_6()); }
	(RULE_NL)?
	{ after(grammarAccess.getMainShapeAccess().getNLTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__7__Impl
	rule__MainShape__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getRightSquareBracketKeyword_7()); }
	']'
	{ after(grammarAccess.getMainShapeAccess().getRightSquareBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getAlternatives_8()); }
	(rule__MainShape__Alternatives_8)*
	{ after(grammarAccess.getMainShapeAccess().getAlternatives_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainShape__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group_5__0__Impl
	rule__MainShape__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getNLTerminalRuleCall_5_0()); }
	(RULE_NL)?
	{ after(grammarAccess.getMainShapeAccess().getNLTerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group_5__1__Impl
	rule__MainShape__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getCommaKeyword_5_1()); }
	','
	{ after(grammarAccess.getMainShapeAccess().getCommaKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getAlternatives_5_2()); }
	(rule__MainShape__Alternatives_5_2)
	{ after(grammarAccess.getMainShapeAccess().getAlternatives_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainShape__Group_8_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group_8_1__0__Impl
	rule__MainShape__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_8_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getPlusSignPlusSignKeyword_8_1_0()); }
	'++'
	{ after(grammarAccess.getMainShapeAccess().getPlusSignPlusSignKeyword_8_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_8_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainShape__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__Group_8_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainShapeAccess().getExternalAssignment_8_1_1()); }
	(rule__MainShape__ExternalAssignment_8_1_1)
	{ after(grammarAccess.getMainShapeAccess().getExternalAssignment_8_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local_var__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_var__Group__0__Impl
	rule__Local_var__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_var__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_varAccess().getNameAssignment_0()); }
	(rule__Local_var__NameAssignment_0)
	{ after(grammarAccess.getLocal_varAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_var__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_var__Group__1__Impl
	rule__Local_var__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_var__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_varAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getLocal_varAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_var__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_var__Group__2__Impl
	rule__Local_var__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_var__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_varAccess().getVarAssignment_2()); }
	(rule__Local_var__VarAssignment_2)
	{ after(grammarAccess.getLocal_varAccess().getVarAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_var__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local_var__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_var__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocal_varAccess().getNLTerminalRuleCall_3()); }
	(RULE_NL)?
	{ after(grammarAccess.getLocal_varAccess().getNLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ref_var__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ref_var__Group_0__0__Impl
	rule__Ref_var__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref_var__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRef_varAccess().getFQNTerminalRuleCall_0_0()); }
	RULE_FQN
	{ after(grammarAccess.getRef_varAccess().getFQNTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref_var__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ref_var__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref_var__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRef_varAccess().getGroup_0_1()); }
	(rule__Ref_var__Group_0_1__0)?
	{ after(grammarAccess.getRef_varAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ref_var__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ref_var__Group_0_1__0__Impl
	rule__Ref_var__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref_var__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRef_varAccess().getFullStopKeyword_0_1_0()); }
	'.'
	{ after(grammarAccess.getRef_varAccess().getFullStopKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref_var__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ref_var__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref_var__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRef_varAccess().getFQNTerminalRuleCall_0_1_1()); }
	RULE_FQN
	{ after(grammarAccess.getRef_varAccess().getFQNTerminalRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group__0__Impl
	rule__ShapeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getNameAssignment_0()); }
	(rule__ShapeList__NameAssignment_0)
	{ after(grammarAccess.getShapeListAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group__1__Impl
	rule__ShapeList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getShapeListAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group__2__Impl
	rule__ShapeList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getShapeListAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group__3__Impl
	rule__ShapeList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getAlternatives_3()); }
	(rule__ShapeList__Alternatives_3)
	{ after(grammarAccess.getShapeListAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group__4__Impl
	rule__ShapeList__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getGroup_4()); }
	(rule__ShapeList__Group_4__0)*
	{ after(grammarAccess.getShapeListAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group__5__Impl
	rule__ShapeList__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getNLTerminalRuleCall_5()); }
	(RULE_NL)?
	{ after(grammarAccess.getShapeListAccess().getNLTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group__6__Impl
	rule__ShapeList__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getShapeListAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getAlternatives_7()); }
	(rule__ShapeList__Alternatives_7)*
	{ after(grammarAccess.getShapeListAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeList__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group_4__0__Impl
	rule__ShapeList__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getNLTerminalRuleCall_4_0()); }
	(RULE_NL)?
	{ after(grammarAccess.getShapeListAccess().getNLTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group_4__1__Impl
	rule__ShapeList__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getCommaKeyword_4_1()); }
	','
	{ after(grammarAccess.getShapeListAccess().getCommaKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getAlternatives_4_2()); }
	(rule__ShapeList__Alternatives_4_2)
	{ after(grammarAccess.getShapeListAccess().getAlternatives_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeList__Group_7_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group_7_1__0__Impl
	rule__ShapeList__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group_7_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getPlusSignPlusSignKeyword_7_1_0()); }
	'++'
	{ after(grammarAccess.getShapeListAccess().getPlusSignPlusSignKeyword_7_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group_7_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeList__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__Group_7_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeListAccess().getExternalAssignment_7_1_1()); }
	(rule__ShapeList__ExternalAssignment_7_1_1)
	{ after(grammarAccess.getShapeListAccess().getExternalAssignment_7_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicShape__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicShape__Group__0__Impl
	rule__BasicShape__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicShapeAccess().getNameAssignment_0()); }
	(rule__BasicShape__NameAssignment_0)
	{ after(grammarAccess.getBasicShapeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicShape__Group__1__Impl
	rule__BasicShape__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicShapeAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getBasicShapeAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicShape__Group__2__Impl
	rule__BasicShape__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicShapeAccess().getNLTerminalRuleCall_2()); }
	(RULE_NL)?
	{ after(grammarAccess.getBasicShapeAccess().getNLTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicShape__Group__3__Impl
	rule__BasicShape__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicShapeAccess().getAlternatives_3()); }
	(rule__BasicShape__Alternatives_3)
	{ after(grammarAccess.getBasicShapeAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicShape__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicShapeAccess().getNLTerminalRuleCall_4()); }
	(RULE_NL)?
	{ after(grammarAccess.getBasicShapeAccess().getNLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shape__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__0__Impl
	rule__Shape__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getStencilAssignment_0()); }
	(rule__Shape__StencilAssignment_0)
	{ after(grammarAccess.getShapeAccess().getStencilAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__1__Impl
	rule__Shape__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getVerticalLineGreaterThanSignKeyword_1()); }
	'|>'
	{ after(grammarAccess.getShapeAccess().getVerticalLineGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shape__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeAccess().getDrawAssignment_2()); }
	(rule__Shape__DrawAssignment_2)
	{ after(grammarAccess.getShapeAccess().getDrawAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_Shape__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Shape__Group__0__Impl
	rule__Conditional_Shape__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ShapeAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditional_ShapeAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Shape__Group__1__Impl
	rule__Conditional_Shape__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ShapeAccess().getBool_exprParserRuleCall_1()); }
	ruleBool_expr
	{ after(grammarAccess.getConditional_ShapeAccess().getBool_exprParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Shape__Group__2__Impl
	rule__Conditional_Shape__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ShapeAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getConditional_ShapeAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Shape__Group__3__Impl
	rule__Conditional_Shape__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ShapeAccess().getNLTerminalRuleCall_3()); }
	RULE_NL
	{ after(grammarAccess.getConditional_ShapeAccess().getNLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Shape__Group__4__Impl
	rule__Conditional_Shape__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ShapeAccess().getAlternatives_4()); }
	(rule__Conditional_Shape__Alternatives_4)
	{ after(grammarAccess.getConditional_ShapeAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Shape__Group__5__Impl
	rule__Conditional_Shape__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ShapeAccess().getNLTerminalRuleCall_5()); }
	RULE_NL
	{ after(grammarAccess.getConditional_ShapeAccess().getNLTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Shape__Group__6__Impl
	rule__Conditional_Shape__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ShapeAccess().getElseKeyword_6()); }
	'else'
	{ after(grammarAccess.getConditional_ShapeAccess().getElseKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Shape__Group__7__Impl
	rule__Conditional_Shape__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ShapeAccess().getNLTerminalRuleCall_7()); }
	RULE_NL
	{ after(grammarAccess.getConditional_ShapeAccess().getNLTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Shape__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ShapeAccess().getAlternatives_8()); }
	(rule__Conditional_Shape__Alternatives_8)
	{ after(grammarAccess.getConditional_ShapeAccess().getAlternatives_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_Color__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__0__Impl
	rule__Conditional_Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getConditional_ColorAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__1__Impl
	rule__Conditional_Color__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getConditional_ColorAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__2__Impl
	rule__Conditional_Color__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getBool_exprParserRuleCall_2()); }
	ruleBool_expr
	{ after(grammarAccess.getConditional_ColorAccess().getBool_exprParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__3__Impl
	rule__Conditional_Color__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getThenKeyword_3()); }
	'then'
	{ after(grammarAccess.getConditional_ColorAccess().getThenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__4__Impl
	rule__Conditional_Color__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getNLTerminalRuleCall_4()); }
	RULE_NL
	{ after(grammarAccess.getConditional_ColorAccess().getNLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__5__Impl
	rule__Conditional_Color__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getAlternatives_5()); }
	(rule__Conditional_Color__Alternatives_5)
	{ after(grammarAccess.getConditional_ColorAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__6__Impl
	rule__Conditional_Color__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getNLTerminalRuleCall_6()); }
	RULE_NL
	{ after(grammarAccess.getConditional_ColorAccess().getNLTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__7__Impl
	rule__Conditional_Color__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getElseKeyword_7()); }
	'else'
	{ after(grammarAccess.getConditional_ColorAccess().getElseKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__8__Impl
	rule__Conditional_Color__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getNLTerminalRuleCall_8()); }
	RULE_NL
	{ after(grammarAccess.getConditional_ColorAccess().getNLTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__9__Impl
	rule__Conditional_Color__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getAlternatives_9()); }
	(rule__Conditional_Color__Alternatives_9)
	{ after(grammarAccess.getConditional_ColorAccess().getAlternatives_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Color__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_ColorAccess().getRightParenthesisKeyword_10()); }
	')'
	{ after(grammarAccess.getConditional_ColorAccess().getRightParenthesisKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_Num__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__0__Impl
	rule__Conditional_Num__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getConditional_NumAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__1__Impl
	rule__Conditional_Num__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getConditional_NumAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__2__Impl
	rule__Conditional_Num__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getBool_exprParserRuleCall_2()); }
	ruleBool_expr
	{ after(grammarAccess.getConditional_NumAccess().getBool_exprParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__3__Impl
	rule__Conditional_Num__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getThenKeyword_3()); }
	'then'
	{ after(grammarAccess.getConditional_NumAccess().getThenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__4__Impl
	rule__Conditional_Num__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getNLTerminalRuleCall_4()); }
	RULE_NL
	{ after(grammarAccess.getConditional_NumAccess().getNLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__5__Impl
	rule__Conditional_Num__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getAlternatives_5()); }
	(rule__Conditional_Num__Alternatives_5)
	{ after(grammarAccess.getConditional_NumAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__6__Impl
	rule__Conditional_Num__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getNLTerminalRuleCall_6()); }
	RULE_NL
	{ after(grammarAccess.getConditional_NumAccess().getNLTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__7__Impl
	rule__Conditional_Num__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getElseKeyword_7()); }
	'else'
	{ after(grammarAccess.getConditional_NumAccess().getElseKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__8__Impl
	rule__Conditional_Num__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getNLTerminalRuleCall_8()); }
	RULE_NL
	{ after(grammarAccess.getConditional_NumAccess().getNLTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__9__Impl
	rule__Conditional_Num__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getAlternatives_9()); }
	(rule__Conditional_Num__Alternatives_9)
	{ after(grammarAccess.getConditional_NumAccess().getAlternatives_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Num__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_NumAccess().getRightParenthesisKeyword_10()); }
	')'
	{ after(grammarAccess.getConditional_NumAccess().getRightParenthesisKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_Str__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__0__Impl
	rule__Conditional_Str__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getConditional_StrAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__1__Impl
	rule__Conditional_Str__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getConditional_StrAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__2__Impl
	rule__Conditional_Str__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getBool_exprParserRuleCall_2()); }
	ruleBool_expr
	{ after(grammarAccess.getConditional_StrAccess().getBool_exprParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__3__Impl
	rule__Conditional_Str__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getThenKeyword_3()); }
	'then'
	{ after(grammarAccess.getConditional_StrAccess().getThenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__4__Impl
	rule__Conditional_Str__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getNLTerminalRuleCall_4()); }
	RULE_NL
	{ after(grammarAccess.getConditional_StrAccess().getNLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__5__Impl
	rule__Conditional_Str__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getAlternatives_5()); }
	(rule__Conditional_Str__Alternatives_5)
	{ after(grammarAccess.getConditional_StrAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__6__Impl
	rule__Conditional_Str__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getElseKeyword_6()); }
	'else'
	{ after(grammarAccess.getConditional_StrAccess().getElseKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__7__Impl
	rule__Conditional_Str__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getNLTerminalRuleCall_7()); }
	RULE_NL
	{ after(grammarAccess.getConditional_StrAccess().getNLTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__8__Impl
	rule__Conditional_Str__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getAlternatives_8()); }
	(rule__Conditional_Str__Alternatives_8)
	{ after(grammarAccess.getConditional_StrAccess().getAlternatives_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_Str__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_StrAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getConditional_StrAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or_expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_expr__Group__0__Impl
	rule__Or_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_exprAccess().getAnd_exprParserRuleCall_0()); }
	ruleAnd_expr
	{ after(grammarAccess.getOr_exprAccess().getAnd_exprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_exprAccess().getGroup_1()); }
	(rule__Or_expr__Group_1__0)*
	{ after(grammarAccess.getOr_exprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or_expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_expr__Group_1__0__Impl
	rule__Or_expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_exprAccess().getOr_exprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOr_exprAccess().getOr_exprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_expr__Group_1__1__Impl
	rule__Or_expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_exprAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getOr_exprAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_exprAccess().getRightAssignment_1_2()); }
	(rule__Or_expr__RightAssignment_1_2)
	{ after(grammarAccess.getOr_exprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expr__Group__0__Impl
	rule__And_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_exprAccess().getNot_exprParserRuleCall_0()); }
	ruleNot_expr
	{ after(grammarAccess.getAnd_exprAccess().getNot_exprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_exprAccess().getGroup_1()); }
	(rule__And_expr__Group_1__0)*
	{ after(grammarAccess.getAnd_exprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expr__Group_1__0__Impl
	rule__And_expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_exprAccess().getAnd_exprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAnd_exprAccess().getAnd_exprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expr__Group_1__1__Impl
	rule__And_expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_exprAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getAnd_exprAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_exprAccess().getRightAssignment_1_2()); }
	(rule__And_expr__RightAssignment_1_2)
	{ after(grammarAccess.getAnd_exprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Not_expr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not_expr__Group_0__0__Impl
	rule__Not_expr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not_expr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNot_exprAccess().getNot_exprAction_0_0()); }
	()
	{ after(grammarAccess.getNot_exprAccess().getNot_exprAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not_expr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not_expr__Group_0__1__Impl
	rule__Not_expr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Not_expr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNot_exprAccess().getNotKeyword_0_1()); }
	'not'
	{ after(grammarAccess.getNot_exprAccess().getNotKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not_expr__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not_expr__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not_expr__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNot_exprAccess().getOperandAssignment_0_2()); }
	(rule__Not_expr__OperandAssignment_0_2)
	{ after(grammarAccess.getNot_exprAccess().getOperandAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare_expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_expr__Group__0__Impl
	rule__Compare_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_exprAccess().getLeftAssignment_0()); }
	(rule__Compare_expr__LeftAssignment_0)
	{ after(grammarAccess.getCompare_exprAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_exprAccess().getGroup_1()); }
	(rule__Compare_expr__Group_1__0)*
	{ after(grammarAccess.getCompare_exprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare_expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_expr__Group_1__0__Impl
	rule__Compare_expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_exprAccess().getCompare_exprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getCompare_exprAccess().getCompare_exprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_expr__Group_1__1__Impl
	rule__Compare_expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_exprAccess().getOperatorAssignment_1_1()); }
	(rule__Compare_expr__OperatorAssignment_1_1)
	{ after(grammarAccess.getCompare_exprAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_exprAccess().getRightAssignment_1_2()); }
	(rule__Compare_expr__RightAssignment_1_2)
	{ after(grammarAccess.getCompare_exprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Math_exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group__0__Impl
	rule__Math_exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getTerminal_math_expParserRuleCall_0()); }
	ruleTerminal_math_exp
	{ after(grammarAccess.getMath_expAccess().getTerminal_math_expParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getGroup_1()); }
	(rule__Math_exp__Group_1__0)*
	{ after(grammarAccess.getMath_expAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Math_exp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group_1__0__Impl
	rule__Math_exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMath_expAccess().getOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group_1__1__Impl
	rule__Math_exp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getOpAssignment_1_1()); }
	(rule__Math_exp__OpAssignment_1_1)
	{ after(grammarAccess.getMath_expAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math_exp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMath_expAccess().getRightAssignment_1_2()); }
	(rule__Math_exp__RightAssignment_1_2)
	{ after(grammarAccess.getMath_expAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminal_math_exp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Terminal_math_exp__Group_0__0__Impl
	rule__Terminal_math_exp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminal_math_expAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getTerminal_math_expAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Terminal_math_exp__Group_0__1__Impl
	rule__Terminal_math_exp__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminal_math_expAccess().getMath_expParserRuleCall_0_1()); }
	ruleMath_exp
	{ after(grammarAccess.getTerminal_math_expAccess().getMath_expParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Terminal_math_exp__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminal_math_expAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getTerminal_math_expAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Terminal_math_exp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Terminal_math_exp__Group_1__0__Impl
	rule__Terminal_math_exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminal_math_expAccess().getFloatLiteralAction_1_0()); }
	()
	{ after(grammarAccess.getTerminal_math_expAccess().getFloatLiteralAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Terminal_math_exp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminal_math_expAccess().getValueAssignment_1_1()); }
	(rule__Terminal_math_exp__ValueAssignment_1_1)
	{ after(grammarAccess.getTerminal_math_expAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Circle__Group__0__Impl
	rule__Circle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCircleAccess().getNameAssignment_0()); }
	(rule__Circle__NameAssignment_0)
	{ after(grammarAccess.getCircleAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Circle__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCircleAccess().getRadiusAssignment_1()); }
	(rule__Circle__RadiusAssignment_1)
	{ after(grammarAccess.getCircleAccess().getRadiusAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rect__Group__0__Impl
	rule__Rect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectAccess().getNameAssignment_0()); }
	(rule__Rect__NameAssignment_0)
	{ after(grammarAccess.getRectAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rect__Group__1__Impl
	rule__Rect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectAccess().getWidthAssignment_1()); }
	(rule__Rect__WidthAssignment_1)
	{ after(grammarAccess.getRectAccess().getWidthAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectAccess().getHeightAssignment_2()); }
	(rule__Rect__HeightAssignment_2)
	{ after(grammarAccess.getRectAccess().getHeightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Square__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Square__Group__0__Impl
	rule__Square__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Square__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquareAccess().getNameAssignment_0()); }
	(rule__Square__NameAssignment_0)
	{ after(grammarAccess.getSquareAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Square__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Square__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Square__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquareAccess().getSideAssignment_1()); }
	(rule__Square__SideAssignment_1)
	{ after(grammarAccess.getSquareAccess().getSideAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoundedRect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedRect__Group__0__Impl
	rule__RoundedRect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedRectAccess().getNameAssignment_0()); }
	(rule__RoundedRect__NameAssignment_0)
	{ after(grammarAccess.getRoundedRectAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedRect__Group__1__Impl
	rule__RoundedRect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedRectAccess().getWidthAssignment_1()); }
	(rule__RoundedRect__WidthAssignment_1)
	{ after(grammarAccess.getRoundedRectAccess().getWidthAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedRect__Group__2__Impl
	rule__RoundedRect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedRectAccess().getHeightAssignment_2()); }
	(rule__RoundedRect__HeightAssignment_2)
	{ after(grammarAccess.getRoundedRectAccess().getHeightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoundedRect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoundedRectAccess().getCorner_radiusAssignment_3()); }
	(rule__RoundedRect__Corner_radiusAssignment_3)
	{ after(grammarAccess.getRoundedRectAccess().getCorner_radiusAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Oval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Oval__Group__0__Impl
	rule__Oval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Oval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOvalAccess().getNameAssignment_0()); }
	(rule__Oval__NameAssignment_0)
	{ after(grammarAccess.getOvalAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Oval__Group__1__Impl
	rule__Oval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Oval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOvalAccess().getWidthAssignment_1()); }
	(rule__Oval__WidthAssignment_1)
	{ after(grammarAccess.getOvalAccess().getWidthAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Oval__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Oval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOvalAccess().getHeightAssignment_2()); }
	(rule__Oval__HeightAssignment_2)
	{ after(grammarAccess.getOvalAccess().getHeightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ngon__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ngon__Group__0__Impl
	rule__Ngon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ngon__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNgonAccess().getNameAssignment_0()); }
	(rule__Ngon__NameAssignment_0)
	{ after(grammarAccess.getNgonAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ngon__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ngon__Group__1__Impl
	rule__Ngon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ngon__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNgonAccess().getSides_numAssignment_1()); }
	(rule__Ngon__Sides_numAssignment_1)
	{ after(grammarAccess.getNgonAccess().getSides_numAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ngon__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ngon__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ngon__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNgonAccess().getRadiusAssignment_2()); }
	(rule__Ngon__RadiusAssignment_2)
	{ after(grammarAccess.getNgonAccess().getRadiusAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Wedge__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wedge__Group__0__Impl
	rule__Wedge__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wedge__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWedgeAccess().getNameAssignment_0()); }
	(rule__Wedge__NameAssignment_0)
	{ after(grammarAccess.getWedgeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wedge__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wedge__Group__1__Impl
	rule__Wedge__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wedge__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWedgeAccess().getRadiusAssignment_1()); }
	(rule__Wedge__RadiusAssignment_1)
	{ after(grammarAccess.getWedgeAccess().getRadiusAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wedge__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wedge__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wedge__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWedgeAccess().getFractionAssignment_2()); }
	(rule__Wedge__FractionAssignment_2)
	{ after(grammarAccess.getWedgeAccess().getFractionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Polygon__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__0__Impl
	rule__Polygon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getNameAssignment_0()); }
	(rule__Polygon__NameAssignment_0)
	{ after(grammarAccess.getPolygonAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__1__Impl
	rule__Polygon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getPolygonAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__2__Impl
	rule__Polygon__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getPoint1Assignment_2()); }
	(rule__Polygon__Point1Assignment_2)
	{ after(grammarAccess.getPolygonAccess().getPoint1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__3__Impl
	rule__Polygon__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getGroup_3()); }
	(rule__Polygon__Group_3__0)*
	{ after(grammarAccess.getPolygonAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getPolygonAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Polygon__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group_3__0__Impl
	rule__Polygon__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getPolygonAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Polygon__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolygonAccess().getPointsAssignment_3_1()); }
	(rule__Polygon__PointsAssignment_3_1)
	{ after(grammarAccess.getPolygonAccess().getPointsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getPointAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__1__Impl
	rule__Point__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getXAssignment_1()); }
	(rule__Point__XAssignment_1)
	{ after(grammarAccess.getPointAccess().getXAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__2__Impl
	rule__Point__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getPointAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__3__Impl
	rule__Point__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getYAssignment_3()); }
	(rule__Point__YAssignment_3)
	{ after(grammarAccess.getPointAccess().getYAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getPointAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getNameAssignment_0()); }
	(rule__Text__NameAssignment_0)
	{ after(grammarAccess.getTextAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getAlternatives_1()); }
	(rule__Text__Alternatives_1)
	{ after(grammarAccess.getTextAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Draw__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Draw__Group__0__Impl
	rule__Draw__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDrawAccess().getAlternatives_0()); }
	(rule__Draw__Alternatives_0)
	{ after(grammarAccess.getDrawAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Draw__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDrawAccess().getGroup_1()); }
	(rule__Draw__Group_1__0)*
	{ after(grammarAccess.getDrawAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Draw__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Draw__Group_1__0__Impl
	rule__Draw__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDrawAccess().getVerticalLineGreaterThanSignKeyword_1_0()); }
	'|>'
	{ after(grammarAccess.getDrawAccess().getVerticalLineGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Draw__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDrawAccess().getTransformAssignment_1_1()); }
	(rule__Draw__TransformAssignment_1_1)
	{ after(grammarAccess.getDrawAccess().getTransformAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Filled__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group__0__Impl
	rule__Filled__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getNameAssignment_0()); }
	(rule__Filled__NameAssignment_0)
	{ after(grammarAccess.getFilledAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group__1__Impl
	rule__Filled__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getAlternatives_1()); }
	(rule__Filled__Alternatives_1)
	{ after(grammarAccess.getFilledAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getGroup_2()); }
	(rule__Filled__Group_2__0)?
	{ after(grammarAccess.getFilledAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Filled__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group_2__0__Impl
	rule__Filled__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getVerticalLineGreaterThanSignKeyword_2_0()); }
	'|>'
	{ after(grammarAccess.getFilledAccess().getVerticalLineGreaterThanSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group_2__1__Impl
	rule__Filled__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getAddOutlineKeyword_2_1()); }
	'addOutline'
	{ after(grammarAccess.getFilledAccess().getAddOutlineKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group_2__2__Impl
	rule__Filled__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getLeftParenthesisKeyword_2_2()); }
	'('
	{ after(grammarAccess.getFilledAccess().getLeftParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group_2__3__Impl
	rule__Filled__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getLineType1Assignment_2_3()); }
	(rule__Filled__LineType1Assignment_2_3)
	{ after(grammarAccess.getFilledAccess().getLineType1Assignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group_2__4__Impl
	rule__Filled__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getWidth1Assignment_2_4()); }
	(rule__Filled__Width1Assignment_2_4)
	{ after(grammarAccess.getFilledAccess().getWidth1Assignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group_2__5__Impl
	rule__Filled__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getRightParenthesisKeyword_2_5()); }
	')'
	{ after(grammarAccess.getFilledAccess().getRightParenthesisKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filled__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilledAccess().getOutline_color1Assignment_2_6()); }
	(rule__Filled__Outline_color1Assignment_2_6)
	{ after(grammarAccess.getFilledAccess().getOutline_color1Assignment_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Outlined__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outlined__Group__0__Impl
	rule__Outlined__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlinedAccess().getNameAssignment_0()); }
	(rule__Outlined__NameAssignment_0)
	{ after(grammarAccess.getOutlinedAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outlined__Group__1__Impl
	rule__Outlined__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlinedAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOutlinedAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outlined__Group__2__Impl
	rule__Outlined__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlinedAccess().getLineTypeAssignment_2()); }
	(rule__Outlined__LineTypeAssignment_2)
	{ after(grammarAccess.getOutlinedAccess().getLineTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outlined__Group__3__Impl
	rule__Outlined__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlinedAccess().getWidthAssignment_3()); }
	(rule__Outlined__WidthAssignment_3)
	{ after(grammarAccess.getOutlinedAccess().getWidthAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outlined__Group__4__Impl
	rule__Outlined__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlinedAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOutlinedAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Outlined__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutlinedAccess().getAlternatives_5()); }
	(rule__Outlined__Alternatives_5)
	{ after(grammarAccess.getOutlinedAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__0__Impl
	rule__Move__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getNameAssignment_0()); }
	(rule__Move__NameAssignment_0)
	{ after(grammarAccess.getMoveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getPointAssignment_1()); }
	(rule__Move__PointAssignment_1)
	{ after(grammarAccess.getMoveAccess().getPointAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rotate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rotate__Group__0__Impl
	rule__Rotate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAccess().getNameAssignment_0()); }
	(rule__Rotate__NameAssignment_0)
	{ after(grammarAccess.getRotateAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rotate__Group__1__Impl
	rule__Rotate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRotateAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rotate__Group__2__Impl
	rule__Rotate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAccess().getDegreesKeyword_2()); }
	'degrees'
	{ after(grammarAccess.getRotateAccess().getDegreesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rotate__Group__3__Impl
	rule__Rotate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAccess().getDegreeAssignment_3()); }
	(rule__Rotate__DegreeAssignment_3)
	{ after(grammarAccess.getRotateAccess().getDegreeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rotate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getRotateAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scale__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scale__Group__0__Impl
	rule__Scale__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scale__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScaleAccess().getNameAssignment_0()); }
	(rule__Scale__NameAssignment_0)
	{ after(grammarAccess.getScaleAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scale__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scale__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scale__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScaleAccess().getFactorAssignment_1()); }
	(rule__Scale__FactorAssignment_1)
	{ after(grammarAccess.getScaleAccess().getFactorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScaleX__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScaleX__Group__0__Impl
	rule__ScaleX__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleX__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScaleXAccess().getNameAssignment_0()); }
	(rule__ScaleX__NameAssignment_0)
	{ after(grammarAccess.getScaleXAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleX__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScaleX__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleX__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScaleXAccess().getFactorAssignment_1()); }
	(rule__ScaleX__FactorAssignment_1)
	{ after(grammarAccess.getScaleXAccess().getFactorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScaleY__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScaleY__Group__0__Impl
	rule__ScaleY__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleY__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScaleYAccess().getNameAssignment_0()); }
	(rule__ScaleY__NameAssignment_0)
	{ after(grammarAccess.getScaleYAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleY__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScaleY__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleY__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScaleYAccess().getFactorAssignment_1()); }
	(rule__ScaleY__FactorAssignment_1)
	{ after(grammarAccess.getScaleYAccess().getFactorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OnlineElm__EntryAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnlineElmAccess().getEntryMainShapeParserRuleCall_0_0()); }
		ruleMainShape
		{ after(grammarAccess.getOnlineElmAccess().getEntryMainShapeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__ShapesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnlineElmAccess().getShapesShapeDefParserRuleCall_1_0()); }
		ruleShapeDef
		{ after(grammarAccess.getOnlineElmAccess().getShapesShapeDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnlineElm__VarAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnlineElmAccess().getVarLocal_varParserRuleCall_2_0()); }
		ruleLocal_var
		{ after(grammarAccess.getOnlineElmAccess().getVarLocal_varParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getNameMyShapesKeyword_0_0()); }
		(
			{ before(grammarAccess.getMainShapeAccess().getNameMyShapesKeyword_0_0()); }
			'myShapes'
			{ after(grammarAccess.getMainShapeAccess().getNameMyShapesKeyword_0_0()); }
		)
		{ after(grammarAccess.getMainShapeAccess().getNameMyShapesKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__ShapeAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getShapeShapeParserRuleCall_4_0_0()); }
		ruleShape
		{ after(grammarAccess.getMainShapeAccess().getShapeShapeParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__ConditionalAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getConditionalConditional_ShapeParserRuleCall_4_1_0()); }
		ruleConditional_Shape
		{ after(grammarAccess.getMainShapeAccess().getConditionalConditional_ShapeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__ShapeRefAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getShapeRefBasicShapeCrossReference_4_2_0()); }
		(
			{ before(grammarAccess.getMainShapeAccess().getShapeRefBasicShapeFQNTerminalRuleCall_4_2_0_1()); }
			RULE_FQN
			{ after(grammarAccess.getMainShapeAccess().getShapeRefBasicShapeFQNTerminalRuleCall_4_2_0_1()); }
		)
		{ after(grammarAccess.getMainShapeAccess().getShapeRefBasicShapeCrossReference_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__MoreShapesAssignment_5_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getMoreShapesShapeParserRuleCall_5_2_0_0()); }
		ruleShape
		{ after(grammarAccess.getMainShapeAccess().getMoreShapesShapeParserRuleCall_5_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__MoreConditionalAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getMoreConditionalConditional_ShapeParserRuleCall_5_2_1_0()); }
		ruleConditional_Shape
		{ after(grammarAccess.getMainShapeAccess().getMoreConditionalConditional_ShapeParserRuleCall_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__MoreShapeRefAssignment_5_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getMoreShapeRefBasicShapeCrossReference_5_2_2_0()); }
		(
			{ before(grammarAccess.getMainShapeAccess().getMoreShapeRefBasicShapeFQNTerminalRuleCall_5_2_2_0_1()); }
			RULE_FQN
			{ after(grammarAccess.getMainShapeAccess().getMoreShapeRefBasicShapeFQNTerminalRuleCall_5_2_2_0_1()); }
		)
		{ after(grammarAccess.getMainShapeAccess().getMoreShapeRefBasicShapeCrossReference_5_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainShape__ExternalAssignment_8_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainShapeAccess().getExternalShapeListCrossReference_8_1_1_0()); }
		(
			{ before(grammarAccess.getMainShapeAccess().getExternalShapeListFQNTerminalRuleCall_8_1_1_0_1()); }
			RULE_FQN
			{ after(grammarAccess.getMainShapeAccess().getExternalShapeListFQNTerminalRuleCall_8_1_1_0_1()); }
		)
		{ after(grammarAccess.getMainShapeAccess().getExternalShapeListCrossReference_8_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_var__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocal_varAccess().getNameFQNTerminalRuleCall_0_0()); }
		RULE_FQN
		{ after(grammarAccess.getLocal_varAccess().getNameFQNTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_var__VarAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocal_varAccess().getVarNum_valueParserRuleCall_2_0()); }
		ruleNum_value
		{ after(grammarAccess.getLocal_varAccess().getVarNum_valueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getNameFQNTerminalRuleCall_0_0()); }
		RULE_FQN
		{ after(grammarAccess.getShapeListAccess().getNameFQNTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__ShapeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getShapeShapeParserRuleCall_3_0_0()); }
		ruleShape
		{ after(grammarAccess.getShapeListAccess().getShapeShapeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__ConditionalAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getConditionalConditional_ShapeParserRuleCall_3_1_0()); }
		ruleConditional_Shape
		{ after(grammarAccess.getShapeListAccess().getConditionalConditional_ShapeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__ShapeRefAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getShapeRefBasicShapeCrossReference_3_2_0()); }
		(
			{ before(grammarAccess.getShapeListAccess().getShapeRefBasicShapeFQNTerminalRuleCall_3_2_0_1()); }
			RULE_FQN
			{ after(grammarAccess.getShapeListAccess().getShapeRefBasicShapeFQNTerminalRuleCall_3_2_0_1()); }
		)
		{ after(grammarAccess.getShapeListAccess().getShapeRefBasicShapeCrossReference_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__MoreShapesAssignment_4_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getMoreShapesShapeParserRuleCall_4_2_0_0()); }
		ruleShape
		{ after(grammarAccess.getShapeListAccess().getMoreShapesShapeParserRuleCall_4_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__MoreConditionalAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getMoreConditionalConditional_ShapeParserRuleCall_4_2_1_0()); }
		ruleConditional_Shape
		{ after(grammarAccess.getShapeListAccess().getMoreConditionalConditional_ShapeParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__MoreShapeRefAssignment_4_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getMoreShapeRefBasicShapeCrossReference_4_2_2_0()); }
		(
			{ before(grammarAccess.getShapeListAccess().getMoreShapeRefBasicShapeFQNTerminalRuleCall_4_2_2_0_1()); }
			RULE_FQN
			{ after(grammarAccess.getShapeListAccess().getMoreShapeRefBasicShapeFQNTerminalRuleCall_4_2_2_0_1()); }
		)
		{ after(grammarAccess.getShapeListAccess().getMoreShapeRefBasicShapeCrossReference_4_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeList__ExternalAssignment_7_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeListAccess().getExternalShapeListCrossReference_7_1_1_0()); }
		(
			{ before(grammarAccess.getShapeListAccess().getExternalShapeListFQNTerminalRuleCall_7_1_1_0_1()); }
			RULE_FQN
			{ after(grammarAccess.getShapeListAccess().getExternalShapeListFQNTerminalRuleCall_7_1_1_0_1()); }
		)
		{ after(grammarAccess.getShapeListAccess().getExternalShapeListCrossReference_7_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicShapeAccess().getNameFQNTerminalRuleCall_0_0()); }
		RULE_FQN
		{ after(grammarAccess.getBasicShapeAccess().getNameFQNTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__ShapeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicShapeAccess().getShapeShapeParserRuleCall_3_0_0()); }
		ruleShape
		{ after(grammarAccess.getBasicShapeAccess().getShapeShapeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicShape__ConditionalAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicShapeAccess().getConditionalConditional_ShapeParserRuleCall_3_1_0()); }
		ruleConditional_Shape
		{ after(grammarAccess.getBasicShapeAccess().getConditionalConditional_ShapeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__StencilAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getStencilStencilParserRuleCall_0_0()); }
		ruleStencil
		{ after(grammarAccess.getShapeAccess().getStencilStencilParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__DrawAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getDrawDrawParserRuleCall_2_0()); }
		ruleDraw
		{ after(grammarAccess.getShapeAccess().getDrawDrawParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Shape_1Assignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ShapeAccess().getShape_1ShapeParserRuleCall_4_0_0()); }
		ruleShape
		{ after(grammarAccess.getConditional_ShapeAccess().getShape_1ShapeParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Nested_1Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ShapeAccess().getNested_1Conditional_ShapeParserRuleCall_4_1_0()); }
		ruleConditional_Shape
		{ after(grammarAccess.getConditional_ShapeAccess().getNested_1Conditional_ShapeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Shape_2Assignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ShapeAccess().getShape_2ShapeParserRuleCall_8_0_0()); }
		ruleShape
		{ after(grammarAccess.getConditional_ShapeAccess().getShape_2ShapeParserRuleCall_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Shape__Nested_2Assignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ShapeAccess().getNested_2Conditional_ShapeParserRuleCall_8_1_0()); }
		ruleConditional_Shape
		{ after(grammarAccess.getConditional_ShapeAccess().getNested_2Conditional_ShapeParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Color_1Assignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ColorAccess().getColor_1ColorEnumRuleCall_5_0_0()); }
		ruleColor
		{ after(grammarAccess.getConditional_ColorAccess().getColor_1ColorEnumRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Nested_1Assignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ColorAccess().getNested_1Conditional_ColorParserRuleCall_5_1_0()); }
		ruleConditional_Color
		{ after(grammarAccess.getConditional_ColorAccess().getNested_1Conditional_ColorParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Color_2Assignment_9_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ColorAccess().getColor_2ColorEnumRuleCall_9_0_0()); }
		ruleColor
		{ after(grammarAccess.getConditional_ColorAccess().getColor_2ColorEnumRuleCall_9_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Color__Nested_2Assignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_ColorAccess().getNested_2Conditional_ColorParserRuleCall_9_1_0()); }
		ruleConditional_Color
		{ after(grammarAccess.getConditional_ColorAccess().getNested_2Conditional_ColorParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Num_1Assignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_NumAccess().getNum_1FLOATTerminalRuleCall_5_0_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getConditional_NumAccess().getNum_1FLOATTerminalRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Nested_1Assignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_NumAccess().getNested_1Conditional_NumParserRuleCall_5_1_0()); }
		ruleConditional_Num
		{ after(grammarAccess.getConditional_NumAccess().getNested_1Conditional_NumParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Num_2Assignment_9_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_NumAccess().getNum_2FLOATTerminalRuleCall_9_0_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getConditional_NumAccess().getNum_2FLOATTerminalRuleCall_9_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Num__Nested_2Assignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_NumAccess().getNested_2Conditional_NumParserRuleCall_9_1_0()); }
		ruleConditional_Num
		{ after(grammarAccess.getConditional_NumAccess().getNested_2Conditional_NumParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Str_1Assignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_StrAccess().getStr_1STRINGTerminalRuleCall_5_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getConditional_StrAccess().getStr_1STRINGTerminalRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Nested_1Assignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_StrAccess().getNested_1Conditional_StrParserRuleCall_5_1_0()); }
		ruleConditional_Str
		{ after(grammarAccess.getConditional_StrAccess().getNested_1Conditional_StrParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Str_2Assignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_StrAccess().getStr_2STRINGTerminalRuleCall_8_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getConditional_StrAccess().getStr_2STRINGTerminalRuleCall_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_Str__Nested_2Assignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditional_StrAccess().getNested_2Conditional_StrParserRuleCall_8_1_0()); }
		ruleConditional_Str
		{ after(grammarAccess.getConditional_StrAccess().getNested_2Conditional_StrParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOr_exprAccess().getRightAnd_exprParserRuleCall_1_2_0()); }
		ruleAnd_expr
		{ after(grammarAccess.getOr_exprAccess().getRightAnd_exprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_exprAccess().getRightNot_exprParserRuleCall_1_2_0()); }
		ruleNot_expr
		{ after(grammarAccess.getAnd_exprAccess().getRightNot_exprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not_expr__OperandAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNot_exprAccess().getOperandNot_exprParserRuleCall_0_2_0()); }
		ruleNot_expr
		{ after(grammarAccess.getNot_exprAccess().getOperandNot_exprParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompare_exprAccess().getLeftNum_valueParserRuleCall_0_0()); }
		ruleNum_value
		{ after(grammarAccess.getCompare_exprAccess().getLeftNum_valueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompare_exprAccess().getOperatorAlternatives_1_1_0()); }
		(rule__Compare_expr__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getCompare_exprAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompare_exprAccess().getRightNum_valueParserRuleCall_1_2_0()); }
		ruleNum_value
		{ after(grammarAccess.getCompare_exprAccess().getRightNum_valueParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num_value__LocalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNum_valueAccess().getLocalLocal_varCrossReference_2_0()); }
		(
			{ before(grammarAccess.getNum_valueAccess().getLocalLocal_varIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNum_valueAccess().getLocalLocal_varIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getNum_valueAccess().getLocalLocal_varCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num_value__RefAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNum_valueAccess().getRefRef_varParserRuleCall_3_0()); }
		ruleRef_var
		{ after(grammarAccess.getNum_valueAccess().getRefRef_varParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMath_expAccess().getOpMATH_OPEnumRuleCall_1_1_0()); }
		ruleMATH_OP
		{ after(grammarAccess.getMath_expAccess().getOpMATH_OPEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math_exp__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMath_expAccess().getRightTerminal_math_expParserRuleCall_1_2_0()); }
		ruleTerminal_math_exp
		{ after(grammarAccess.getMath_expAccess().getRightTerminal_math_expParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal_math_exp__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminal_math_expAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getTerminal_math_expAccess().getValueFLOATTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCircleAccess().getNameCircleKeyword_0_0()); }
		(
			{ before(grammarAccess.getCircleAccess().getNameCircleKeyword_0_0()); }
			'circle'
			{ after(grammarAccess.getCircleAccess().getNameCircleKeyword_0_0()); }
		)
		{ after(grammarAccess.getCircleAccess().getNameCircleKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__RadiusAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCircleAccess().getRadiusNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getCircleAccess().getRadiusNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectAccess().getNameRectKeyword_0_0()); }
		(
			{ before(grammarAccess.getRectAccess().getNameRectKeyword_0_0()); }
			'rect'
			{ after(grammarAccess.getRectAccess().getNameRectKeyword_0_0()); }
		)
		{ after(grammarAccess.getRectAccess().getNameRectKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__WidthAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectAccess().getWidthNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getRectAccess().getWidthNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rect__HeightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectAccess().getHeightNum_valueParserRuleCall_2_0()); }
		ruleNum_value
		{ after(grammarAccess.getRectAccess().getHeightNum_valueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Square__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSquareAccess().getNameSquareKeyword_0_0()); }
		(
			{ before(grammarAccess.getSquareAccess().getNameSquareKeyword_0_0()); }
			'square'
			{ after(grammarAccess.getSquareAccess().getNameSquareKeyword_0_0()); }
		)
		{ after(grammarAccess.getSquareAccess().getNameSquareKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Square__SideAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSquareAccess().getSideNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getSquareAccess().getSideNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoundedRectAccess().getNameRoundedRectKeyword_0_0()); }
		(
			{ before(grammarAccess.getRoundedRectAccess().getNameRoundedRectKeyword_0_0()); }
			'roundedRect'
			{ after(grammarAccess.getRoundedRectAccess().getNameRoundedRectKeyword_0_0()); }
		)
		{ after(grammarAccess.getRoundedRectAccess().getNameRoundedRectKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__WidthAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoundedRectAccess().getWidthNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getRoundedRectAccess().getWidthNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__HeightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoundedRectAccess().getHeightNum_valueParserRuleCall_2_0()); }
		ruleNum_value
		{ after(grammarAccess.getRoundedRectAccess().getHeightNum_valueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoundedRect__Corner_radiusAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoundedRectAccess().getCorner_radiusNum_valueParserRuleCall_3_0()); }
		ruleNum_value
		{ after(grammarAccess.getRoundedRectAccess().getCorner_radiusNum_valueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oval__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOvalAccess().getNameOvalKeyword_0_0()); }
		(
			{ before(grammarAccess.getOvalAccess().getNameOvalKeyword_0_0()); }
			'oval'
			{ after(grammarAccess.getOvalAccess().getNameOvalKeyword_0_0()); }
		)
		{ after(grammarAccess.getOvalAccess().getNameOvalKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oval__WidthAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOvalAccess().getWidthNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getOvalAccess().getWidthNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oval__HeightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOvalAccess().getHeightNum_valueParserRuleCall_2_0()); }
		ruleNum_value
		{ after(grammarAccess.getOvalAccess().getHeightNum_valueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ngon__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNgonAccess().getNameNgonKeyword_0_0()); }
		(
			{ before(grammarAccess.getNgonAccess().getNameNgonKeyword_0_0()); }
			'ngon'
			{ after(grammarAccess.getNgonAccess().getNameNgonKeyword_0_0()); }
		)
		{ after(grammarAccess.getNgonAccess().getNameNgonKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ngon__Sides_numAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNgonAccess().getSides_numNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getNgonAccess().getSides_numNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ngon__RadiusAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNgonAccess().getRadiusNum_valueParserRuleCall_2_0()); }
		ruleNum_value
		{ after(grammarAccess.getNgonAccess().getRadiusNum_valueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wedge__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWedgeAccess().getNameWedgeKeyword_0_0()); }
		(
			{ before(grammarAccess.getWedgeAccess().getNameWedgeKeyword_0_0()); }
			'wedge'
			{ after(grammarAccess.getWedgeAccess().getNameWedgeKeyword_0_0()); }
		)
		{ after(grammarAccess.getWedgeAccess().getNameWedgeKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wedge__RadiusAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWedgeAccess().getRadiusNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getWedgeAccess().getRadiusNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wedge__FractionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWedgeAccess().getFractionNum_valueParserRuleCall_2_0()); }
		ruleNum_value
		{ after(grammarAccess.getWedgeAccess().getFractionNum_valueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolygonAccess().getNamePolygonKeyword_0_0()); }
		(
			{ before(grammarAccess.getPolygonAccess().getNamePolygonKeyword_0_0()); }
			'polygon'
			{ after(grammarAccess.getPolygonAccess().getNamePolygonKeyword_0_0()); }
		)
		{ after(grammarAccess.getPolygonAccess().getNamePolygonKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Point1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolygonAccess().getPoint1PointParserRuleCall_2_0()); }
		rulePoint
		{ after(grammarAccess.getPolygonAccess().getPoint1PointParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__PointsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolygonAccess().getPointsPointParserRuleCall_3_1_0()); }
		rulePoint
		{ after(grammarAccess.getPolygonAccess().getPointsPointParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__XAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getXNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getPointAccess().getXNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__YAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getYNum_valueParserRuleCall_3_0()); }
		ruleNum_value
		{ after(grammarAccess.getPointAccess().getYNum_valueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
		(
			{ before(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
			'text'
			{ after(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
		)
		{ after(grammarAccess.getTextAccess().getNameTextKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ContentAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getContentSTRINGTerminalRuleCall_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getContentSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ConditionalContentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getConditionalContentConditional_StrParserRuleCall_1_1_0()); }
		ruleConditional_Str
		{ after(grammarAccess.getTextAccess().getConditionalContentConditional_StrParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__FilledAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDrawAccess().getFilledFilledParserRuleCall_0_0_0()); }
		ruleFilled
		{ after(grammarAccess.getDrawAccess().getFilledFilledParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__OutlinedAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDrawAccess().getOutlinedOutlinedParserRuleCall_0_1_0()); }
		ruleOutlined
		{ after(grammarAccess.getDrawAccess().getOutlinedOutlinedParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Draw__TransformAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDrawAccess().getTransformTranformParserRuleCall_1_1_0()); }
		ruleTranform
		{ after(grammarAccess.getDrawAccess().getTransformTranformParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilledAccess().getNameFilledKeyword_0_0()); }
		(
			{ before(grammarAccess.getFilledAccess().getNameFilledKeyword_0_0()); }
			'filled'
			{ after(grammarAccess.getFilledAccess().getNameFilledKeyword_0_0()); }
		)
		{ after(grammarAccess.getFilledAccess().getNameFilledKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__FilledColor1Assignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilledAccess().getFilledColor1ColorEnumRuleCall_1_0_0()); }
		ruleColor
		{ after(grammarAccess.getFilledAccess().getFilledColor1ColorEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__FilledColor2Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilledAccess().getFilledColor2Conditional_ColorParserRuleCall_1_1_0()); }
		ruleConditional_Color
		{ after(grammarAccess.getFilledAccess().getFilledColor2Conditional_ColorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__LineType1Assignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilledAccess().getLineType1LineTypeEnumRuleCall_2_3_0()); }
		ruleLineType
		{ after(grammarAccess.getFilledAccess().getLineType1LineTypeEnumRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Width1Assignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilledAccess().getWidth1FLOATTerminalRuleCall_2_4_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getFilledAccess().getWidth1FLOATTerminalRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filled__Outline_color1Assignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilledAccess().getOutline_color1ColorEnumRuleCall_2_6_0()); }
		ruleColor
		{ after(grammarAccess.getFilledAccess().getOutline_color1ColorEnumRuleCall_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlinedAccess().getNameOutlinedKeyword_0_0()); }
		(
			{ before(grammarAccess.getOutlinedAccess().getNameOutlinedKeyword_0_0()); }
			'outlined'
			{ after(grammarAccess.getOutlinedAccess().getNameOutlinedKeyword_0_0()); }
		)
		{ after(grammarAccess.getOutlinedAccess().getNameOutlinedKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__LineTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlinedAccess().getLineTypeLineTypeEnumRuleCall_2_0()); }
		ruleLineType
		{ after(grammarAccess.getOutlinedAccess().getLineTypeLineTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__WidthAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlinedAccess().getWidthFLOATTerminalRuleCall_3_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getOutlinedAccess().getWidthFLOATTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__OutlinedColor1Assignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlinedAccess().getOutlinedColor1ColorEnumRuleCall_5_0_0()); }
		ruleColor
		{ after(grammarAccess.getOutlinedAccess().getOutlinedColor1ColorEnumRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Outlined__OutlinedColor2Assignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutlinedAccess().getOutlinedColor2Conditional_ColorParserRuleCall_5_1_0()); }
		ruleConditional_Color
		{ after(grammarAccess.getOutlinedAccess().getOutlinedColor2Conditional_ColorParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getNameMoveKeyword_0_0()); }
		(
			{ before(grammarAccess.getMoveAccess().getNameMoveKeyword_0_0()); }
			'move'
			{ after(grammarAccess.getMoveAccess().getNameMoveKeyword_0_0()); }
		)
		{ after(grammarAccess.getMoveAccess().getNameMoveKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__PointAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getPointPointParserRuleCall_1_0()); }
		rulePoint
		{ after(grammarAccess.getMoveAccess().getPointPointParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAccess().getNameRotateKeyword_0_0()); }
		(
			{ before(grammarAccess.getRotateAccess().getNameRotateKeyword_0_0()); }
			'rotate'
			{ after(grammarAccess.getRotateAccess().getNameRotateKeyword_0_0()); }
		)
		{ after(grammarAccess.getRotateAccess().getNameRotateKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rotate__DegreeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateAccess().getDegreeNum_valueParserRuleCall_3_0()); }
		ruleNum_value
		{ after(grammarAccess.getRotateAccess().getDegreeNum_valueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scale__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScaleAccess().getNameScaleKeyword_0_0()); }
		(
			{ before(grammarAccess.getScaleAccess().getNameScaleKeyword_0_0()); }
			'scale'
			{ after(grammarAccess.getScaleAccess().getNameScaleKeyword_0_0()); }
		)
		{ after(grammarAccess.getScaleAccess().getNameScaleKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scale__FactorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScaleAccess().getFactorNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getScaleAccess().getFactorNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleX__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScaleXAccess().getNameScaleXKeyword_0_0()); }
		(
			{ before(grammarAccess.getScaleXAccess().getNameScaleXKeyword_0_0()); }
			'scaleX'
			{ after(grammarAccess.getScaleXAccess().getNameScaleXKeyword_0_0()); }
		)
		{ after(grammarAccess.getScaleXAccess().getNameScaleXKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleX__FactorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScaleXAccess().getFactorNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getScaleXAccess().getFactorNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleY__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScaleYAccess().getNameScaleYKeyword_0_0()); }
		(
			{ before(grammarAccess.getScaleYAccess().getNameScaleYKeyword_0_0()); }
			'scaleY'
			{ after(grammarAccess.getScaleYAccess().getNameScaleYKeyword_0_0()); }
		)
		{ after(grammarAccess.getScaleYAccess().getNameScaleYKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScaleY__FactorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScaleYAccess().getFactorNum_valueParserRuleCall_1_0()); }
		ruleNum_value
		{ after(grammarAccess.getScaleYAccess().getFactorNum_valueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_FLOAT : (RULE_INT ('.' RULE_INT)?|'(' '-' RULE_INT ('.' RULE_INT)? ')');

RULE_FQN : 'a'..'z' ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_NL : ('\r'? '\n' ' '*)+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
