/**
 * generated by Xtext 2.24.0
 */
package org.xtext.online_elm.onlineElm.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.online_elm.onlineElm.OnlineElmPackage;
import org.xtext.online_elm.onlineElm.Rect;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rect</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.RectImpl#getEdgeX <em>Edge X</em>}</li>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.RectImpl#getEdgeY <em>Edge Y</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RectImpl extends StencilImpl implements Rect
{
  /**
   * The default value of the '{@link #getEdgeX() <em>Edge X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEdgeX()
   * @generated
   * @ordered
   */
  protected static final float EDGE_X_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getEdgeX() <em>Edge X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEdgeX()
   * @generated
   * @ordered
   */
  protected float edgeX = EDGE_X_EDEFAULT;

  /**
   * The default value of the '{@link #getEdgeY() <em>Edge Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEdgeY()
   * @generated
   * @ordered
   */
  protected static final float EDGE_Y_EDEFAULT = 0.0F;

  /**
   * The cached value of the '{@link #getEdgeY() <em>Edge Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEdgeY()
   * @generated
   * @ordered
   */
  protected float edgeY = EDGE_Y_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RectImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OnlineElmPackage.Literals.RECT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public float getEdgeX()
  {
    return edgeX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEdgeX(float newEdgeX)
  {
    float oldEdgeX = edgeX;
    edgeX = newEdgeX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.RECT__EDGE_X, oldEdgeX, edgeX));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public float getEdgeY()
  {
    return edgeY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEdgeY(float newEdgeY)
  {
    float oldEdgeY = edgeY;
    edgeY = newEdgeY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.RECT__EDGE_Y, oldEdgeY, edgeY));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OnlineElmPackage.RECT__EDGE_X:
        return getEdgeX();
      case OnlineElmPackage.RECT__EDGE_Y:
        return getEdgeY();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OnlineElmPackage.RECT__EDGE_X:
        setEdgeX((Float)newValue);
        return;
      case OnlineElmPackage.RECT__EDGE_Y:
        setEdgeY((Float)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OnlineElmPackage.RECT__EDGE_X:
        setEdgeX(EDGE_X_EDEFAULT);
        return;
      case OnlineElmPackage.RECT__EDGE_Y:
        setEdgeY(EDGE_Y_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OnlineElmPackage.RECT__EDGE_X:
        return edgeX != EDGE_X_EDEFAULT;
      case OnlineElmPackage.RECT__EDGE_Y:
        return edgeY != EDGE_Y_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (edgeX: ");
    result.append(edgeX);
    result.append(", edgeY: ");
    result.append(edgeY);
    result.append(')');
    return result.toString();
  }

} //RectImpl
