/**
 * generated by Xtext 2.24.0
 */
package org.xtext.online_elm.onlineElm.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.online_elm.onlineElm.Draw;
import org.xtext.online_elm.onlineElm.Filled;
import org.xtext.online_elm.onlineElm.OnlineElmPackage;
import org.xtext.online_elm.onlineElm.Outlined;
import org.xtext.online_elm.onlineElm.Tranform;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Draw</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.DrawImpl#getFilled <em>Filled</em>}</li>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.DrawImpl#getOutlined <em>Outlined</em>}</li>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.DrawImpl#getTransform <em>Transform</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DrawImpl extends MinimalEObjectImpl.Container implements Draw
{
  /**
   * The cached value of the '{@link #getFilled() <em>Filled</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilled()
   * @generated
   * @ordered
   */
  protected Filled filled;

  /**
   * The cached value of the '{@link #getOutlined() <em>Outlined</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutlined()
   * @generated
   * @ordered
   */
  protected Outlined outlined;

  /**
   * The cached value of the '{@link #getTransform() <em>Transform</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTransform()
   * @generated
   * @ordered
   */
  protected EList<Tranform> transform;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DrawImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OnlineElmPackage.Literals.DRAW;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Filled getFilled()
  {
    return filled;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilled(Filled newFilled, NotificationChain msgs)
  {
    Filled oldFilled = filled;
    filled = newFilled;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OnlineElmPackage.DRAW__FILLED, oldFilled, newFilled);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilled(Filled newFilled)
  {
    if (newFilled != filled)
    {
      NotificationChain msgs = null;
      if (filled != null)
        msgs = ((InternalEObject)filled).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.DRAW__FILLED, null, msgs);
      if (newFilled != null)
        msgs = ((InternalEObject)newFilled).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.DRAW__FILLED, null, msgs);
      msgs = basicSetFilled(newFilled, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.DRAW__FILLED, newFilled, newFilled));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Outlined getOutlined()
  {
    return outlined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOutlined(Outlined newOutlined, NotificationChain msgs)
  {
    Outlined oldOutlined = outlined;
    outlined = newOutlined;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OnlineElmPackage.DRAW__OUTLINED, oldOutlined, newOutlined);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOutlined(Outlined newOutlined)
  {
    if (newOutlined != outlined)
    {
      NotificationChain msgs = null;
      if (outlined != null)
        msgs = ((InternalEObject)outlined).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.DRAW__OUTLINED, null, msgs);
      if (newOutlined != null)
        msgs = ((InternalEObject)newOutlined).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.DRAW__OUTLINED, null, msgs);
      msgs = basicSetOutlined(newOutlined, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.DRAW__OUTLINED, newOutlined, newOutlined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Tranform> getTransform()
  {
    if (transform == null)
    {
      transform = new EObjectContainmentEList<Tranform>(Tranform.class, this, OnlineElmPackage.DRAW__TRANSFORM);
    }
    return transform;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED:
        return basicSetFilled(null, msgs);
      case OnlineElmPackage.DRAW__OUTLINED:
        return basicSetOutlined(null, msgs);
      case OnlineElmPackage.DRAW__TRANSFORM:
        return ((InternalEList<?>)getTransform()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED:
        return getFilled();
      case OnlineElmPackage.DRAW__OUTLINED:
        return getOutlined();
      case OnlineElmPackage.DRAW__TRANSFORM:
        return getTransform();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED:
        setFilled((Filled)newValue);
        return;
      case OnlineElmPackage.DRAW__OUTLINED:
        setOutlined((Outlined)newValue);
        return;
      case OnlineElmPackage.DRAW__TRANSFORM:
        getTransform().clear();
        getTransform().addAll((Collection<? extends Tranform>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED:
        setFilled((Filled)null);
        return;
      case OnlineElmPackage.DRAW__OUTLINED:
        setOutlined((Outlined)null);
        return;
      case OnlineElmPackage.DRAW__TRANSFORM:
        getTransform().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED:
        return filled != null;
      case OnlineElmPackage.DRAW__OUTLINED:
        return outlined != null;
      case OnlineElmPackage.DRAW__TRANSFORM:
        return transform != null && !transform.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //DrawImpl
