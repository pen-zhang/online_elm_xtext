/**
 * generated by Xtext 2.24.0
 */
package org.xtext.online_elm.onlineElm.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.online_elm.onlineElm.Draw;
import org.xtext.online_elm.onlineElm.Fill;
import org.xtext.online_elm.onlineElm.Move;
import org.xtext.online_elm.onlineElm.OnlineElmPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Draw</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.DrawImpl#getFilledColor <em>Filled Color</em>}</li>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.DrawImpl#getPosition <em>Position</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DrawImpl extends MinimalEObjectImpl.Container implements Draw
{
  /**
   * The cached value of the '{@link #getFilledColor() <em>Filled Color</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilledColor()
   * @generated
   * @ordered
   */
  protected Fill filledColor;

  /**
   * The cached value of the '{@link #getPosition() <em>Position</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPosition()
   * @generated
   * @ordered
   */
  protected Move position;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DrawImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OnlineElmPackage.Literals.DRAW;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Fill getFilledColor()
  {
    return filledColor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilledColor(Fill newFilledColor, NotificationChain msgs)
  {
    Fill oldFilledColor = filledColor;
    filledColor = newFilledColor;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OnlineElmPackage.DRAW__FILLED_COLOR, oldFilledColor, newFilledColor);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilledColor(Fill newFilledColor)
  {
    if (newFilledColor != filledColor)
    {
      NotificationChain msgs = null;
      if (filledColor != null)
        msgs = ((InternalEObject)filledColor).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.DRAW__FILLED_COLOR, null, msgs);
      if (newFilledColor != null)
        msgs = ((InternalEObject)newFilledColor).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.DRAW__FILLED_COLOR, null, msgs);
      msgs = basicSetFilledColor(newFilledColor, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.DRAW__FILLED_COLOR, newFilledColor, newFilledColor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Move getPosition()
  {
    return position;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPosition(Move newPosition, NotificationChain msgs)
  {
    Move oldPosition = position;
    position = newPosition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OnlineElmPackage.DRAW__POSITION, oldPosition, newPosition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPosition(Move newPosition)
  {
    if (newPosition != position)
    {
      NotificationChain msgs = null;
      if (position != null)
        msgs = ((InternalEObject)position).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.DRAW__POSITION, null, msgs);
      if (newPosition != null)
        msgs = ((InternalEObject)newPosition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.DRAW__POSITION, null, msgs);
      msgs = basicSetPosition(newPosition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.DRAW__POSITION, newPosition, newPosition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED_COLOR:
        return basicSetFilledColor(null, msgs);
      case OnlineElmPackage.DRAW__POSITION:
        return basicSetPosition(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED_COLOR:
        return getFilledColor();
      case OnlineElmPackage.DRAW__POSITION:
        return getPosition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED_COLOR:
        setFilledColor((Fill)newValue);
        return;
      case OnlineElmPackage.DRAW__POSITION:
        setPosition((Move)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED_COLOR:
        setFilledColor((Fill)null);
        return;
      case OnlineElmPackage.DRAW__POSITION:
        setPosition((Move)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OnlineElmPackage.DRAW__FILLED_COLOR:
        return filledColor != null;
      case OnlineElmPackage.DRAW__POSITION:
        return position != null;
    }
    return super.eIsSet(featureID);
  }

} //DrawImpl
