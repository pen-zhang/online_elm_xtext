/**
 * generated by Xtext 2.24.0
 */
package org.xtext.online_elm.onlineElm.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.online_elm.onlineElm.Color;
import org.xtext.online_elm.onlineElm.Conditional_Color;
import org.xtext.online_elm.onlineElm.Filled;
import org.xtext.online_elm.onlineElm.LineType;
import org.xtext.online_elm.onlineElm.OnlineElmPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Filled</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.FilledImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.FilledImpl#getFilledColor1 <em>Filled Color1</em>}</li>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.FilledImpl#getFilledColor2 <em>Filled Color2</em>}</li>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.FilledImpl#getLineType1 <em>Line Type1</em>}</li>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.FilledImpl#getWidth1 <em>Width1</em>}</li>
 *   <li>{@link org.xtext.online_elm.onlineElm.impl.FilledImpl#getOutline_color1 <em>Outline color1</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FilledImpl extends MinimalEObjectImpl.Container implements Filled
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getFilledColor1() <em>Filled Color1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilledColor1()
   * @generated
   * @ordered
   */
  protected static final Color FILLED_COLOR1_EDEFAULT = Color.BLACK;

  /**
   * The cached value of the '{@link #getFilledColor1() <em>Filled Color1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilledColor1()
   * @generated
   * @ordered
   */
  protected Color filledColor1 = FILLED_COLOR1_EDEFAULT;

  /**
   * The cached value of the '{@link #getFilledColor2() <em>Filled Color2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilledColor2()
   * @generated
   * @ordered
   */
  protected Conditional_Color filledColor2;

  /**
   * The default value of the '{@link #getLineType1() <em>Line Type1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLineType1()
   * @generated
   * @ordered
   */
  protected static final LineType LINE_TYPE1_EDEFAULT = LineType.SOLID;

  /**
   * The cached value of the '{@link #getLineType1() <em>Line Type1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLineType1()
   * @generated
   * @ordered
   */
  protected LineType lineType1 = LINE_TYPE1_EDEFAULT;

  /**
   * The default value of the '{@link #getWidth1() <em>Width1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth1()
   * @generated
   * @ordered
   */
  protected static final String WIDTH1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWidth1() <em>Width1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth1()
   * @generated
   * @ordered
   */
  protected String width1 = WIDTH1_EDEFAULT;

  /**
   * The default value of the '{@link #getOutline_color1() <em>Outline color1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutline_color1()
   * @generated
   * @ordered
   */
  protected static final Color OUTLINE_COLOR1_EDEFAULT = Color.BLACK;

  /**
   * The cached value of the '{@link #getOutline_color1() <em>Outline color1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutline_color1()
   * @generated
   * @ordered
   */
  protected Color outline_color1 = OUTLINE_COLOR1_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FilledImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OnlineElmPackage.Literals.FILLED;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.FILLED__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Color getFilledColor1()
  {
    return filledColor1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilledColor1(Color newFilledColor1)
  {
    Color oldFilledColor1 = filledColor1;
    filledColor1 = newFilledColor1 == null ? FILLED_COLOR1_EDEFAULT : newFilledColor1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.FILLED__FILLED_COLOR1, oldFilledColor1, filledColor1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Conditional_Color getFilledColor2()
  {
    return filledColor2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilledColor2(Conditional_Color newFilledColor2, NotificationChain msgs)
  {
    Conditional_Color oldFilledColor2 = filledColor2;
    filledColor2 = newFilledColor2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OnlineElmPackage.FILLED__FILLED_COLOR2, oldFilledColor2, newFilledColor2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilledColor2(Conditional_Color newFilledColor2)
  {
    if (newFilledColor2 != filledColor2)
    {
      NotificationChain msgs = null;
      if (filledColor2 != null)
        msgs = ((InternalEObject)filledColor2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.FILLED__FILLED_COLOR2, null, msgs);
      if (newFilledColor2 != null)
        msgs = ((InternalEObject)newFilledColor2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OnlineElmPackage.FILLED__FILLED_COLOR2, null, msgs);
      msgs = basicSetFilledColor2(newFilledColor2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.FILLED__FILLED_COLOR2, newFilledColor2, newFilledColor2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LineType getLineType1()
  {
    return lineType1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLineType1(LineType newLineType1)
  {
    LineType oldLineType1 = lineType1;
    lineType1 = newLineType1 == null ? LINE_TYPE1_EDEFAULT : newLineType1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.FILLED__LINE_TYPE1, oldLineType1, lineType1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWidth1()
  {
    return width1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWidth1(String newWidth1)
  {
    String oldWidth1 = width1;
    width1 = newWidth1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.FILLED__WIDTH1, oldWidth1, width1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Color getOutline_color1()
  {
    return outline_color1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOutline_color1(Color newOutline_color1)
  {
    Color oldOutline_color1 = outline_color1;
    outline_color1 = newOutline_color1 == null ? OUTLINE_COLOR1_EDEFAULT : newOutline_color1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OnlineElmPackage.FILLED__OUTLINE_COLOR1, oldOutline_color1, outline_color1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OnlineElmPackage.FILLED__FILLED_COLOR2:
        return basicSetFilledColor2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OnlineElmPackage.FILLED__NAME:
        return getName();
      case OnlineElmPackage.FILLED__FILLED_COLOR1:
        return getFilledColor1();
      case OnlineElmPackage.FILLED__FILLED_COLOR2:
        return getFilledColor2();
      case OnlineElmPackage.FILLED__LINE_TYPE1:
        return getLineType1();
      case OnlineElmPackage.FILLED__WIDTH1:
        return getWidth1();
      case OnlineElmPackage.FILLED__OUTLINE_COLOR1:
        return getOutline_color1();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OnlineElmPackage.FILLED__NAME:
        setName((String)newValue);
        return;
      case OnlineElmPackage.FILLED__FILLED_COLOR1:
        setFilledColor1((Color)newValue);
        return;
      case OnlineElmPackage.FILLED__FILLED_COLOR2:
        setFilledColor2((Conditional_Color)newValue);
        return;
      case OnlineElmPackage.FILLED__LINE_TYPE1:
        setLineType1((LineType)newValue);
        return;
      case OnlineElmPackage.FILLED__WIDTH1:
        setWidth1((String)newValue);
        return;
      case OnlineElmPackage.FILLED__OUTLINE_COLOR1:
        setOutline_color1((Color)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OnlineElmPackage.FILLED__NAME:
        setName(NAME_EDEFAULT);
        return;
      case OnlineElmPackage.FILLED__FILLED_COLOR1:
        setFilledColor1(FILLED_COLOR1_EDEFAULT);
        return;
      case OnlineElmPackage.FILLED__FILLED_COLOR2:
        setFilledColor2((Conditional_Color)null);
        return;
      case OnlineElmPackage.FILLED__LINE_TYPE1:
        setLineType1(LINE_TYPE1_EDEFAULT);
        return;
      case OnlineElmPackage.FILLED__WIDTH1:
        setWidth1(WIDTH1_EDEFAULT);
        return;
      case OnlineElmPackage.FILLED__OUTLINE_COLOR1:
        setOutline_color1(OUTLINE_COLOR1_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OnlineElmPackage.FILLED__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case OnlineElmPackage.FILLED__FILLED_COLOR1:
        return filledColor1 != FILLED_COLOR1_EDEFAULT;
      case OnlineElmPackage.FILLED__FILLED_COLOR2:
        return filledColor2 != null;
      case OnlineElmPackage.FILLED__LINE_TYPE1:
        return lineType1 != LINE_TYPE1_EDEFAULT;
      case OnlineElmPackage.FILLED__WIDTH1:
        return WIDTH1_EDEFAULT == null ? width1 != null : !WIDTH1_EDEFAULT.equals(width1);
      case OnlineElmPackage.FILLED__OUTLINE_COLOR1:
        return outline_color1 != OUTLINE_COLOR1_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", filledColor1: ");
    result.append(filledColor1);
    result.append(", lineType1: ");
    result.append(lineType1);
    result.append(", width1: ");
    result.append(width1);
    result.append(", outline_color1: ");
    result.append(outline_color1);
    result.append(')');
    return result.toString();
  }

} //FilledImpl
